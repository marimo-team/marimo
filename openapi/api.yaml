components:
  schemas:
    AddPackageRequest:
      properties:
        package:
          type: string
      required:
      - package
      type: object
    AiCompletionRequest:
      properties:
        code:
          type: string
        context:
          nullable: true
          properties:
            schema:
              items:
                properties:
                  columns:
                    items:
                      properties:
                        name:
                          type: string
                        type:
                          type: string
                      required:
                      - name
                      - type
                      type: object
                    type: array
                  name:
                    type: string
                required:
                - name
                - columns
                type: object
              type: array
          required:
          - schema
          type: object
        includeOtherCode:
          type: string
        language:
          enum:
          - python
          - markdown
          - sql
          type: string
        prompt:
          type: string
      required:
      - prompt
      - includeOtherCode
      - code
      - language
      type: object
    Alert:
      properties:
        description:
          type: string
        name:
          enum:
          - alert
          type: string
        title:
          type: string
        variant:
          enum:
          - danger
          nullable: true
          type: string
      required:
      - title
      - description
      - name
      type: object
    AppMetadata:
      properties:
        cliArgs:
          additionalProperties:
            oneOf:
            - type: string
            - type: boolean
            - type: integer
            - type: number
            - items:
                oneOf:
                - type: string
                - type: boolean
                - type: integer
                - type: number
              type: array
          type: object
        filename:
          nullable: true
          type: string
        queryParams:
          additionalProperties:
            oneOf:
            - type: string
            - items:
                type: string
              type: array
          type: object
      required:
      - queryParams
      - cliArgs
      type: object
    Banner:
      properties:
        action:
          enum:
          - restart
          nullable: true
          type: string
        description:
          type: string
        name:
          enum:
          - banner
          type: string
        title:
          type: string
        variant:
          enum:
          - danger
          nullable: true
          type: string
      required:
      - title
      - description
      - name
      type: object
    BaseResponse:
      properties:
        success:
          type: boolean
      required:
      - success
      type: object
    CellChannel:
      enum:
      - stdout
      - stderr
      - stdin
      - pdb
      - output
      - marimo-error
      - media
      type: string
    CellConfig:
      properties:
        column:
          nullable: true
          type: integer
        disabled:
          type: boolean
        hide_code:
          type: boolean
      required:
      - disabled
      - hide_code
      type: object
    CellOp:
      properties:
        cell_id:
          type: string
        console:
          nullable: true
          oneOf:
          - $ref: '#/components/schemas/CellOutput'
          - items:
              $ref: '#/components/schemas/CellOutput'
            type: array
        name:
          enum:
          - cell-op
          type: string
        output:
          $ref: '#/components/schemas/CellOutput'
          nullable: true
        stale_inputs:
          nullable: true
          type: boolean
        status:
          $ref: '#/components/schemas/RuntimeState'
          nullable: true
        timestamp:
          type: number
      required:
      - cell_id
      - timestamp
      - name
      type: object
    CellOutput:
      properties:
        channel:
          $ref: '#/components/schemas/CellChannel'
        data:
          oneOf:
          - type: string
          - items:
              $ref: '#/components/schemas/Error'
            type: array
          - additionalProperties: {}
            type: object
        mimetype:
          $ref: '#/components/schemas/MimeType'
        timestamp:
          type: number
      required:
      - channel
      - mimetype
      - data
      - timestamp
      type: object
    CodeCompletionRequest:
      properties:
        cellId:
          type: string
        document:
          type: string
        id:
          type: string
      required:
      - id
      - document
      - cellId
      type: object
    ColumnSummary:
      properties:
        'false':
          nullable: true
          type: integer
        max:
          $ref: '#/components/schemas/NonNestedLiteral'
          nullable: true
        mean:
          $ref: '#/components/schemas/NonNestedLiteral'
          nullable: true
        median:
          $ref: '#/components/schemas/NonNestedLiteral'
          nullable: true
        min:
          $ref: '#/components/schemas/NonNestedLiteral'
          nullable: true
        nulls:
          nullable: true
          type: integer
        p25:
          $ref: '#/components/schemas/NonNestedLiteral'
          nullable: true
        p5:
          $ref: '#/components/schemas/NonNestedLiteral'
          nullable: true
        p75:
          $ref: '#/components/schemas/NonNestedLiteral'
          nullable: true
        p95:
          $ref: '#/components/schemas/NonNestedLiteral'
          nullable: true
        std:
          $ref: '#/components/schemas/NonNestedLiteral'
          nullable: true
        total:
          nullable: true
          type: integer
        'true':
          nullable: true
          type: integer
        unique:
          nullable: true
          type: integer
      type: object
    CompletedRun:
      properties:
        name:
          enum:
          - completed-run
          type: string
      required:
      - name
      type: object
    CompletionResult:
      properties:
        completion_id:
          type: string
        name:
          enum:
          - completion-result
          type: string
        options:
          items:
            properties:
              completion_info:
                nullable: true
                type: string
              name:
                type: string
              type:
                type: string
            required:
            - name
            - type
            type: object
          type: array
        prefix_length:
          type: integer
      required:
      - completion_id
      - prefix_length
      - options
      - name
      type: object
    CopyNotebookRequest:
      properties:
        destination:
          type: string
        source:
          type: string
      required:
      - source
      - destination
      type: object
    CreationRequest:
      properties:
        executionRequests:
          items:
            $ref: '#/components/schemas/ExecutionRequest'
          type: array
        setUiElementValueRequest:
          $ref: '#/components/schemas/SetUIElementValueRequest'
      required:
      - executionRequests
      - setUiElementValueRequest
      type: object
    CycleError:
      properties:
        edges_with_vars:
          items:
            prefixItems:
            - type: string
            - items:
                type: string
              type: array
            - type: string
            type: array
          type: array
        type:
          enum:
          - cycle
          type: string
      required:
      - edges_with_vars
      - type
      type: object
    DataColumnPreview:
      properties:
        chart_code:
          nullable: true
          type: string
        chart_max_rows_errors:
          type: boolean
        chart_spec:
          nullable: true
          type: string
        column_name:
          type: string
        error:
          nullable: true
          type: string
        name:
          enum:
          - data-column-preview
          type: string
        summary:
          $ref: '#/components/schemas/ColumnSummary'
          nullable: true
        table_name:
          type: string
      required:
      - table_name
      - column_name
      - chart_max_rows_errors
      - name
      type: object
    DataTable:
      properties:
        columns:
          items:
            $ref: '#/components/schemas/DataTableColumn'
          type: array
        name:
          type: string
        num_columns:
          nullable: true
          type: integer
        num_rows:
          nullable: true
          type: integer
        source:
          type: string
        source_type:
          enum:
          - local
          - duckdb
          type: string
        variable_name:
          nullable: true
          type: string
      required:
      - source_type
      - source
      - name
      - columns
      type: object
    DataTableColumn:
      properties:
        external_type:
          type: string
        name:
          type: string
        type:
          $ref: '#/components/schemas/DataType'
      required:
      - name
      - type
      - external_type
      type: object
    DataType:
      enum:
      - string
      - boolean
      - integer
      - number
      - date
      - datetime
      - time
      - unknown
      type: string
    Datasets:
      properties:
        clear_channel:
          enum:
          - local
          - duckdb
          nullable: true
          type: string
        name:
          enum:
          - datasets
          type: string
        tables:
          items:
            $ref: '#/components/schemas/DataTable'
          type: array
      required:
      - tables
      - name
      type: object
    DeleteCellRequest:
      properties:
        cellId:
          type: string
      required:
      - cellId
      type: object
    DeleteNonlocalError:
      properties:
        cells:
          items:
            type: string
          type: array
        name:
          type: string
        type:
          enum:
          - delete-nonlocal
          type: string
      required:
      - name
      - cells
      - type
      type: object
    Error:
      oneOf:
      - $ref: '#/components/schemas/CycleError'
      - $ref: '#/components/schemas/MultipleDefinitionError'
      - $ref: '#/components/schemas/DeleteNonlocalError'
      - $ref: '#/components/schemas/MarimoAncestorStoppedError'
      - $ref: '#/components/schemas/MarimoAncestorPreventedError'
      - $ref: '#/components/schemas/MarimoExceptionRaisedError'
      - $ref: '#/components/schemas/MarimoStrictExecutionError'
      - $ref: '#/components/schemas/MarimoInterruptionError'
      - $ref: '#/components/schemas/MarimoSyntaxError'
      - $ref: '#/components/schemas/UnknownError'
    ExecuteMultipleRequest:
      properties:
        cellIds:
          items:
            type: string
          type: array
        codes:
          items:
            type: string
          type: array
        timestamp:
          type: number
      required:
      - cellIds
      - codes
      - timestamp
      type: object
    ExecuteScratchpadRequest:
      properties:
        code:
          type: string
      required:
      - code
      type: object
    ExecuteStaleRequest:
      properties: {}
      type: object
    ExecutionRequest:
      properties:
        cellId:
          type: string
        code:
          type: string
        timestamp:
          type: number
      required:
      - cellId
      - code
      - timestamp
      type: object
    ExportAsHTMLRequest:
      properties:
        assetUrl:
          nullable: true
          type: string
        download:
          type: boolean
        files:
          items:
            type: string
          type: array
        includeCode:
          type: boolean
      required:
      - download
      - files
      - includeCode
      type: object
    ExportAsMarkdownRequest:
      properties:
        download:
          type: boolean
      required:
      - download
      type: object
    ExportAsScriptRequest:
      properties:
        download:
          type: boolean
      required:
      - download
      type: object
    FileCreateRequest:
      properties:
        contents:
          nullable: true
          type: string
        name:
          type: string
        path:
          type: string
        type:
          enum:
          - file
          - directory
          type: string
      required:
      - path
      - type
      - name
      type: object
    FileCreateResponse:
      properties:
        info:
          $ref: '#/components/schemas/FileInfo'
          nullable: true
        message:
          nullable: true
          type: string
        success:
          type: boolean
      required:
      - success
      type: object
    FileDeleteRequest:
      properties:
        path:
          type: string
      required:
      - path
      type: object
    FileDeleteResponse:
      properties:
        message:
          nullable: true
          type: string
        success:
          type: boolean
      required:
      - success
      type: object
    FileDetailsRequest:
      properties:
        path:
          type: string
      required:
      - path
      type: object
    FileDetailsResponse:
      properties:
        contents:
          nullable: true
          type: string
        file:
          $ref: '#/components/schemas/FileInfo'
        mimeType:
          nullable: true
          type: string
      required:
      - file
      type: object
    FileInfo:
      properties:
        children:
          items:
            $ref: '#/components/schemas/FileInfo'
          type: array
        id:
          type: string
        isDirectory:
          type: boolean
        isMarimoFile:
          type: boolean
        lastModified:
          nullable: true
          type: number
        name:
          type: string
        path:
          type: string
      required:
      - id
      - path
      - name
      - isDirectory
      - isMarimoFile
      - children
      type: object
    FileListRequest:
      properties:
        path:
          nullable: true
          type: string
      type: object
    FileListResponse:
      properties:
        files:
          items:
            $ref: '#/components/schemas/FileInfo'
          type: array
        root:
          type: string
      required:
      - files
      - root
      type: object
    FileMoveRequest:
      properties:
        newPath:
          type: string
        path:
          type: string
      required:
      - path
      - newPath
      type: object
    FileMoveResponse:
      properties:
        info:
          $ref: '#/components/schemas/FileInfo'
          nullable: true
        message:
          nullable: true
          type: string
        success:
          type: boolean
      required:
      - success
      type: object
    FileUpdateRequest:
      properties:
        contents:
          type: string
        path:
          type: string
      required:
      - path
      - contents
      type: object
    FileUpdateResponse:
      properties:
        info:
          $ref: '#/components/schemas/FileInfo'
          nullable: true
        message:
          nullable: true
          type: string
        success:
          type: boolean
      required:
      - success
      type: object
    FocusCell:
      properties:
        cell_id:
          type: string
        name:
          enum:
          - focus-cell
          type: string
      required:
      - cell_id
      - name
      type: object
    FormatRequest:
      properties:
        codes:
          additionalProperties:
            type: string
          type: object
        lineLength:
          type: integer
      required:
      - codes
      - lineLength
      type: object
    FormatResponse:
      properties:
        codes:
          additionalProperties:
            type: string
          type: object
      required:
      - codes
      type: object
    FunctionCallRequest:
      properties:
        args:
          additionalProperties: {}
          type: object
        functionCallId:
          type: string
        functionName:
          type: string
        namespace:
          type: string
      required:
      - functionCallId
      - namespace
      - functionName
      - args
      type: object
    FunctionCallResult:
      properties:
        function_call_id:
          type: string
        name:
          enum:
          - function-call-result
          type: string
        return_value:
          $ref: '#/components/schemas/JSONType'
        status:
          $ref: '#/components/schemas/HumanReadableStatus'
      required:
      - function_call_id
      - status
      - name
      type: object
    HumanReadableStatus:
      properties:
        code:
          enum:
          - ok
          - error
          type: string
        message:
          nullable: true
          type: string
        title:
          nullable: true
          type: string
      required:
      - code
      type: object
    InstallMissingPackagesRequest:
      properties:
        manager:
          type: string
        versions:
          additionalProperties:
            type: string
          type: object
      required:
      - manager
      - versions
      type: object
    InstallingPackageAlert:
      properties:
        name:
          enum:
          - installing-package-alert
          type: string
        packages:
          additionalProperties:
            enum:
            - queued
            - installing
            - installed
            - failed
            type: string
          type: object
      required:
      - packages
      - name
      type: object
    InstantiateRequest:
      properties:
        objectIds:
          items:
            type: string
          type: array
        values:
          items: {}
          type: array
      required:
      - objectIds
      - values
      type: object
    Interrupted:
      properties:
        name:
          enum:
          - interrupted
          type: string
      required:
      - name
      type: object
    JSONType:
      oneOf:
      - type: string
      - type: number
      - type: object
      - type: array
      - type: boolean
      - type: 'null'
    KernelReady:
      properties:
        app_config:
          properties:
            app_title:
              nullable: true
              type: string
            auto_download:
              items:
                enum:
                - html
                - markdown
                type: string
              type: array
            css_file:
              nullable: true
              type: string
            html_head_file:
              nullable: true
              type: string
            layout_file:
              nullable: true
              type: string
            width:
              enum:
              - normal
              - compact
              - medium
              - full
              type: string
          required:
          - width
          - auto_download
          type: object
        capabilities:
          properties:
            sql:
              type: boolean
            terminal:
              type: boolean
          required:
          - sql
          - terminal
          type: object
        cell_ids:
          items:
            type: string
          type: array
        codes:
          items:
            type: string
          type: array
        configs:
          items:
            $ref: '#/components/schemas/CellConfig'
          type: array
        kiosk:
          type: boolean
        last_executed_code:
          additionalProperties:
            type: string
          nullable: true
          type: object
        last_execution_time:
          additionalProperties:
            type: number
          nullable: true
          type: object
        layout:
          nullable: true
          properties:
            data:
              additionalProperties: {}
              type: object
            type:
              type: string
          required:
          - type
          - data
          type: object
        name:
          enum:
          - kernel-ready
          type: string
        names:
          items:
            type: string
          type: array
        resumed:
          type: boolean
        ui_values:
          additionalProperties:
            nullable: true
            oneOf:
            - additionalProperties:
                $ref: '#/components/schemas/JSONType'
              type: object
            - items:
                $ref: '#/components/schemas/JSONType'
              type: array
            - type: string
            - type: integer
            - type: number
            - type: boolean
            - additionalProperties: true
              type: object
            - $ref: '#/components/schemas/MIME'
          nullable: true
          type: object
      required:
      - cell_ids
      - codes
      - names
      - configs
      - resumed
      - app_config
      - kiosk
      - capabilities
      - name
      type: object
    ListPackagesResponse:
      properties:
        packages:
          items:
            $ref: '#/components/schemas/PackageDescription'
          type: array
      required:
      - packages
      type: object
    MIME:
      properties: {}
      type: object
    MarimoAncestorPreventedError:
      properties:
        blamed_cell:
          nullable: true
          type: string
        msg:
          type: string
        raising_cell:
          type: string
        type:
          enum:
          - ancestor-prevented
          type: string
      required:
      - msg
      - raising_cell
      - type
      type: object
    MarimoAncestorStoppedError:
      properties:
        msg:
          type: string
        raising_cell:
          type: string
        type:
          enum:
          - ancestor-stopped
          type: string
      required:
      - msg
      - raising_cell
      - type
      type: object
    MarimoConfig:
      properties:
        ai:
          properties:
            anthropic:
              properties:
                api_key:
                  type: string
              type: object
            google:
              properties:
                api_key:
                  type: string
              type: object
            open_ai:
              properties:
                api_key:
                  type: string
                base_url:
                  type: string
                model:
                  type: string
              type: object
            rules:
              type: string
          type: object
        completion:
          properties:
            activate_on_typing:
              type: boolean
            codeium_api_key:
              nullable: true
              type: string
            copilot:
              oneOf:
              - type: boolean
              - enum:
                - github
                - codeium
                type: string
          required:
          - activate_on_typing
          - copilot
          type: object
        display:
          properties:
            cell_output:
              enum:
              - above
              - below
              type: string
            code_editor_font_size:
              type: integer
            dataframes:
              enum:
              - rich
              - plain
              type: string
            default_width:
              enum:
              - normal
              - compact
              - medium
              - full
              type: string
            theme:
              enum:
              - light
              - dark
              - system
              type: string
          required:
          - theme
          - code_editor_font_size
          - cell_output
          - default_width
          - dataframes
          type: object
        experimental:
          additionalProperties: {}
          type: object
        formatting:
          properties:
            line_length:
              type: integer
          required:
          - line_length
          type: object
        keymap:
          properties:
            overrides:
              additionalProperties:
                type: string
              type: object
            preset:
              enum:
              - default
              - vim
              type: string
          required:
          - preset
          type: object
        package_management:
          properties:
            manager:
              enum:
              - pip
              - rye
              - uv
              - poetry
              - pixi
              type: string
          required:
          - manager
          type: object
        runtime:
          properties:
            auto_instantiate:
              type: boolean
            auto_reload:
              enum:
              - 'off'
              - lazy
              - autorun
              type: string
            on_cell_change:
              enum:
              - lazy
              - autorun
              type: string
          required:
          - auto_instantiate
          - auto_reload
          - on_cell_change
          type: object
        save:
          properties:
            autosave:
              enum:
              - 'off'
              - after_delay
              type: string
            autosave_delay:
              type: integer
            format_on_save:
              type: boolean
          required:
          - autosave
          - autosave_delay
          - format_on_save
          type: object
        server:
          properties:
            browser:
              oneOf:
              - enum:
                - default
                type: string
              - type: string
            follow_symlink:
              type: boolean
          required:
          - browser
          - follow_symlink
          type: object
      required:
      - completion
      - display
      - formatting
      - keymap
      - runtime
      - save
      - server
      - package_management
      type: object
    MarimoExceptionRaisedError:
      properties:
        exception_type:
          type: string
        msg:
          type: string
        raising_cell:
          nullable: true
          type: string
        type:
          enum:
          - exception
          type: string
      required:
      - msg
      - exception_type
      - type
      type: object
    MarimoFile:
      properties:
        initializationId:
          nullable: true
          type: string
        lastModified:
          nullable: true
          type: number
        name:
          type: string
        path:
          type: string
        sessionId:
          nullable: true
          type: string
      required:
      - name
      - path
      type: object
    MarimoInterruptionError:
      properties:
        type:
          enum:
          - interruption
          type: string
      required:
      - type
      type: object
    MarimoStrictExecutionError:
      properties:
        blamed_cell:
          nullable: true
          type: string
        msg:
          type: string
        ref:
          type: string
        type:
          enum:
          - strict-exception
          type: string
      required:
      - msg
      - ref
      - type
      type: object
    MarimoSyntaxError:
      properties:
        msg:
          type: string
        type:
          enum:
          - syntax
          type: string
      required:
      - msg
      - type
      type: object
    MessageOperation:
      oneOf:
      - $ref: '#/components/schemas/CellOp'
      - $ref: '#/components/schemas/FunctionCallResult'
      - $ref: '#/components/schemas/SendUIElementMessage'
      - $ref: '#/components/schemas/RemoveUIElements'
      - $ref: '#/components/schemas/Reload'
      - $ref: '#/components/schemas/Reconnected'
      - $ref: '#/components/schemas/Interrupted'
      - $ref: '#/components/schemas/CompletedRun'
      - $ref: '#/components/schemas/KernelReady'
      - $ref: '#/components/schemas/CompletionResult'
      - $ref: '#/components/schemas/Alert'
      - $ref: '#/components/schemas/Banner'
      - $ref: '#/components/schemas/MissingPackageAlert'
      - $ref: '#/components/schemas/InstallingPackageAlert'
      - $ref: '#/components/schemas/Variables'
      - $ref: '#/components/schemas/VariableValues'
      - $ref: '#/components/schemas/QueryParamsSet'
      - $ref: '#/components/schemas/QueryParamsAppend'
      - $ref: '#/components/schemas/QueryParamsDelete'
      - $ref: '#/components/schemas/QueryParamsClear'
      - $ref: '#/components/schemas/Datasets'
      - $ref: '#/components/schemas/DataColumnPreview'
      - $ref: '#/components/schemas/FocusCell'
      - $ref: '#/components/schemas/UpdateCellCodes'
      - $ref: '#/components/schemas/UpdateCellIdsRequest'
    MimeType:
      enum:
      - application/json
      - application/vnd.marimo+error
      - application/vnd.marimo+traceback
      - application/vnd.marimo+mimebundle
      - application/vnd.vega.v5+json
      - application/vnd.vegalite.v5+json
      - image/png
      - image/svg+xml
      - image/tiff
      - image/avif
      - image/bmp
      - image/gif
      - image/jpeg
      - video/mp4
      - video/mpeg
      - text/html
      - text/plain
      - text/markdown
      - text/latex
      - text/csv
      type: string
    MissingPackageAlert:
      properties:
        isolated:
          type: boolean
        name:
          enum:
          - missing-package-alert
          type: string
        packages:
          items:
            type: string
          type: array
      required:
      - packages
      - isolated
      - name
      type: object
    MultipleDefinitionError:
      properties:
        cells:
          items:
            type: string
          type: array
        name:
          type: string
        type:
          enum:
          - multiple-defs
          type: string
      required:
      - name
      - cells
      - type
      type: object
    NonNestedLiteral:
      oneOf:
      - type: integer
      - type: number
      - format: date
        type: string
      - format: time
        type: string
      - format: date-time
        type: string
      - format: duration
        type: string
      - type: string
      - type: boolean
      - format: byte
        type: string
    OpenFileRequest:
      properties:
        path:
          type: string
      required:
      - path
      type: object
    OpenTutorialRequest:
      properties:
        tutorialId:
          oneOf:
          - enum:
            - intro
            - dataflow
            - ui
            - markdown
            - plots
            - sql
            - layout
            - fileformat
            - for-jupyter-users
            type: string
          - enum:
            - markdown-format
            type: string
      required:
      - tutorialId
      type: object
    PackageDescription:
      properties:
        name:
          type: string
        version:
          type: string
      required:
      - name
      - version
      type: object
    PackageOperationResponse:
      properties:
        error:
          nullable: true
          type: string
        success:
          type: boolean
      required:
      - success
      type: object
    PreviewDatasetColumnRequest:
      properties:
        columnName:
          type: string
        source:
          type: string
        sourceType:
          enum:
          - local
          - duckdb
          type: string
        tableName:
          type: string
      required:
      - sourceType
      - source
      - tableName
      - columnName
      type: object
    QueryParamsAppend:
      properties:
        key:
          type: string
        name:
          enum:
          - query-params-append
          type: string
        value:
          type: string
      required:
      - key
      - value
      - name
      type: object
    QueryParamsClear:
      properties:
        name:
          enum:
          - query-params-clear
          type: string
      required:
      - name
      type: object
    QueryParamsDelete:
      properties:
        key:
          type: string
        name:
          enum:
          - query-params-delete
          type: string
        value:
          nullable: true
          type: string
      required:
      - key
      - name
      type: object
    QueryParamsSet:
      properties:
        key:
          type: string
        name:
          enum:
          - query-params-set
          type: string
        value:
          oneOf:
          - type: string
          - items:
              type: string
            type: array
      required:
      - key
      - value
      - name
      type: object
    ReadCodeResponse:
      properties:
        contents:
          type: string
      required:
      - contents
      type: object
    RecentFilesResponse:
      properties:
        files:
          items:
            $ref: '#/components/schemas/MarimoFile'
          type: array
      required:
      - files
      type: object
    Reconnected:
      properties:
        name:
          enum:
          - reconnected
          type: string
      required:
      - name
      type: object
    Reload:
      properties:
        name:
          enum:
          - reload
          type: string
      required:
      - name
      type: object
    RemovePackageRequest:
      properties:
        package:
          type: string
      required:
      - package
      type: object
    RemoveUIElements:
      properties:
        cell_id:
          type: string
        name:
          enum:
          - remove-ui-elements
          type: string
      required:
      - cell_id
      - name
      type: object
    RenameFileRequest:
      properties:
        filename:
          type: string
      required:
      - filename
      type: object
    RenameRequest:
      properties:
        filename:
          type: string
      required:
      - filename
      type: object
    RunRequest:
      properties:
        cellIds:
          items:
            type: string
          type: array
        codes:
          items:
            type: string
          type: array
      required:
      - cellIds
      - codes
      type: object
    RunScratchpadRequest:
      properties:
        code:
          type: string
      required:
      - code
      type: object
    RunningNotebooksResponse:
      properties:
        files:
          items:
            $ref: '#/components/schemas/MarimoFile'
          type: array
      required:
      - files
      type: object
    RuntimeState:
      enum:
      - idle
      - queued
      - running
      - disabled-transitively
      type: string
    SaveAppConfigurationRequest:
      properties:
        config:
          additionalProperties: {}
          type: object
      required:
      - config
      type: object
    SaveNotebookRequest:
      properties:
        cellIds:
          items:
            type: string
          type: array
        codes:
          items:
            type: string
          type: array
        configs:
          items:
            $ref: '#/components/schemas/CellConfig'
          type: array
        filename:
          type: string
        layout:
          additionalProperties: {}
          nullable: true
          type: object
        names:
          items:
            type: string
          type: array
        persist:
          type: boolean
      required:
      - cellIds
      - codes
      - names
      - configs
      - filename
      - persist
      type: object
    SaveUserConfigurationRequest:
      properties:
        config:
          $ref: '#/components/schemas/MarimoConfig'
      required:
      - config
      type: object
    SendUIElementMessage:
      properties:
        buffers:
          items:
            type: string
          nullable: true
          type: array
        message:
          additionalProperties:
            additionalProperties: true
            type: object
          type: object
        name:
          enum:
          - send-ui-element-message
          type: string
        ui_element:
          type: string
      required:
      - ui_element
      - message
      - name
      type: object
    SetCellConfigRequest:
      properties:
        configs:
          additionalProperties:
            additionalProperties: {}
            type: object
          type: object
      required:
      - configs
      type: object
    SetUIElementValueRequest:
      properties:
        objectIds:
          items:
            type: string
          type: array
        token:
          type: string
        values:
          items: {}
          type: array
      required:
      - objectIds
      - values
      - token
      type: object
    SetUserConfigRequest:
      properties:
        config:
          $ref: '#/components/schemas/MarimoConfig'
      required:
      - config
      type: object
    ShutdownSessionRequest:
      properties:
        sessionId:
          type: string
      required:
      - sessionId
      type: object
    Snippet:
      properties:
        sections:
          items:
            $ref: '#/components/schemas/SnippetSection'
          type: array
        title:
          type: string
      required:
      - title
      - sections
      type: object
    SnippetSection:
      properties:
        code:
          nullable: true
          type: string
        html:
          nullable: true
          type: string
        id:
          type: string
      required:
      - id
      type: object
    Snippets:
      properties:
        snippets:
          items:
            $ref: '#/components/schemas/Snippet'
          type: array
      required:
      - snippets
      type: object
    StdinRequest:
      properties:
        text:
          type: string
      required:
      - text
      type: object
    StopRequest:
      properties: {}
      type: object
    SuccessResponse:
      properties:
        success:
          type: boolean
      required:
      - success
      type: object
    UnknownError:
      properties:
        msg:
          type: string
        type:
          enum:
          - unknown
          type: string
      required:
      - msg
      - type
      type: object
    UpdateCellCodes:
      properties:
        cell_ids:
          items:
            type: string
          type: array
        codes:
          items:
            type: string
          type: array
        name:
          enum:
          - update-cell-codes
          type: string
      required:
      - cell_ids
      - codes
      - name
      type: object
    UpdateCellIdsRequest:
      properties:
        cell_ids:
          items:
            type: string
          type: array
        name:
          enum:
          - update-cell-ids
          type: string
      required:
      - cell_ids
      - name
      type: object
    UpdateComponentValuesRequest:
      properties:
        objectIds:
          items:
            type: string
          type: array
        values:
          items: {}
          type: array
      required:
      - objectIds
      - values
      type: object
    VariableDeclaration:
      properties:
        declared_by:
          items:
            type: string
          type: array
        name:
          type: string
        used_by:
          items:
            type: string
          type: array
      required:
      - name
      - declared_by
      - used_by
      type: object
    VariableValue:
      properties:
        datatype:
          nullable: true
          type: string
        name:
          type: string
        value:
          nullable: true
          type: string
      required:
      - name
      type: object
    VariableValues:
      properties:
        name:
          enum:
          - variable-values
          type: string
        variables:
          items:
            $ref: '#/components/schemas/VariableValue'
          type: array
      required:
      - variables
      - name
      type: object
    Variables:
      properties:
        name:
          enum:
          - variables
          type: string
        variables:
          items:
            $ref: '#/components/schemas/VariableDeclaration'
          type: array
      required:
      - variables
      - name
      type: object
    WorkspaceFilesRequest:
      properties:
        includeMarkdown:
          type: boolean
      required:
      - includeMarkdown
      type: object
    WorkspaceFilesResponse:
      properties:
        files:
          items:
            $ref: '#/components/schemas/FileInfo'
          type: array
        root:
          type: string
      required:
      - root
      - files
      type: object
info:
  title: marimo API
  version: 0.9.21
openapi: 3.1.0
paths:
  /@file/{filename_and_length}:
    get:
      parameters:
      - description: The filename and byte length of the virtual file
        in: path
        name: filename_and_length
        required: true
        schema:
          type: string
      responses:
        200:
          content:
            application/octet-stream:
              schema:
                type: string
          description: Get a virtual file
        404:
          description: Invalid byte length in virtual file request
  /api/ai/completion:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AiCompletionRequest'
        description: The prompt to get AI completion for
        required: true
      responses:
        200:
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: Get AI completion for a prompt
  /api/datasources/preview_column:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreviewDatasetColumnRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Preview a column in a dataset
  /api/documentation/snippets:
    get:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snippets'
          description: Load the snippets for the documentation page
  /api/export/auto_export/html:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportAsHTMLRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Export the notebook as HTML
        400:
          description: File must be saved before downloading
  /api/export/auto_export/markdown:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportAsMarkdownRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Export the notebook as a markdown
        400:
          description: File must be saved before downloading
  /api/export/html:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportAsHTMLRequest'
      responses:
        200:
          content:
            text/html:
              schema:
                type: string
          description: Export the notebook as HTML
        400:
          description: File must be saved before downloading
  /api/export/markdown:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportAsMarkdownRequest'
      responses:
        200:
          content:
            text/plain:
              schema:
                type: string
          description: Export the notebook as a markdown
        400:
          description: File must be saved before downloading
  /api/export/script:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportAsScriptRequest'
      responses:
        200:
          content:
            text/plain:
              schema:
                type: string
          description: Export the notebook as a script
        400:
          description: File must be saved before downloading
  /api/files/create:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileCreateRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileCreateResponse'
          description: Create a new file or directory
  /api/files/delete:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileDeleteRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDeleteResponse'
          description: Delete a file or directory
  /api/files/file_details:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileDetailsRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDetailsResponse'
          description: Get details of a specific file or directory
  /api/files/list_files:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileListRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileListResponse'
          description: List files and directories in a given path
  /api/files/move:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileMoveRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMoveResponse'
          description: Move a file or directory
  /api/files/update:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileUpdateRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUpdateResponse'
          description: Update a file or directory
  /api/home/recent_files:
    post:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecentFilesResponse'
          description: Get the recent files
  /api/home/running_notebooks:
    post:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunningNotebooksResponse'
          description: Get the running files
  /api/home/shutdown_session:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShutdownSessionRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunningNotebooksResponse'
          description: Shutdown the current session
  /api/home/tutorial/open:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenTutorialRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarimoFile'
          description: Open a new tutorial
  /api/home/workspace_files:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceFilesRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceFilesResponse'
          description: Get the files in the workspace
  /api/kernel/code_autocomplete:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeCompletionRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Complete a code fragment
  /api/kernel/copy:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyNotebookRequest'
      responses:
        200:
          content:
            text/plain:
              schema:
                type: string
          description: Copy notebook
  /api/kernel/delete:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCellRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Delete a cell
  /api/kernel/format:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormatRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormatResponse'
          description: Format code
  /api/kernel/function_call:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FunctionCallRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Invoke an RPC
  /api/kernel/install_missing_packages:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstallMissingPackagesRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Install missing packages
  /api/kernel/instantiate:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstantiateRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Instantiate a component
  /api/kernel/interrupt:
    post:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Interrupt the kernel's execution
  /api/kernel/open:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenFileRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Open a file
        400:
          description: File does not exist
  /api/kernel/read_code:
    post:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadCodeResponse'
          description: Read the code from the server
        400:
          description: File must be saved before downloading
  /api/kernel/rename:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameFileRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Rename the current app
  /api/kernel/restart_session:
    post:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Restart the current session without affecting other sessions.
  /api/kernel/run:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Run a cell. Updates cell code in the kernel if needed; registers
            new cells for unseen cell IDs. Only allowed in edit mode.
  /api/kernel/save:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveNotebookRequest'
      responses:
        200:
          content:
            text/plain:
              schema:
                type: string
          description: Save the current app
  /api/kernel/save_app_config:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveAppConfigurationRequest'
      responses:
        200:
          content:
            text/plain:
              schema:
                type: string
          description: Save the app configuration
  /api/kernel/save_user_config:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveUserConfigurationRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Update the user config on disk and in the kernel. Only allowed
            in edit mode.
  /api/kernel/scratchpad/run:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunScratchpadRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Run the scratchpad
  /api/kernel/set_cell_config:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetCellConfigRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Set the configuration of a cell
  /api/kernel/set_ui_element_value:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateComponentValuesRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Set UI element values
  /api/kernel/shutdown:
    post:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Shutdown the kernel
  /api/kernel/stdin:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StdinRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Send input to the stdin stream
  /api/kernel/sync/cell_ids:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCellIdsRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Sync cell ids
  /api/kernel/takeover:
    post:
      responses: null
      200:
        content:
          application/json:
            schema:
              properties:
                status:
                  type: string
              type: object
        description: Successfully closed existing sessions
  /api/packages/add:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPackageRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageOperationResponse'
          description: Install package
  /api/packages/list:
    get:
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackagesResponse'
          description: List installed packages
  /api/packages/remove:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemovePackageRequest'
      responses:
        200:
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageOperationResponse'
          description: Uninstall package
  /api/status:
    get:
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  filenames:
                    items:
                      type: string
                    type: array
                  lsp_running:
                    type: boolean
                  mode:
                    type: string
                  node_version:
                    type: string
                  requirements:
                    items:
                      type: string
                    type: array
                  sessions:
                    type: integer
                  status:
                    type: string
                  version:
                    type: string
                type: object
          description: Get the status of the application
  /api/usage:
    get:
      responses:
        200:
          content:
            application/json:
              schema:
                properties:
                  cpu:
                    properties:
                      percent:
                        type: number
                    required:
                    - percent
                    type: object
                  kernel:
                    properties:
                      memory:
                        type: integer
                    type: object
                  memory:
                    properties:
                      available:
                        type: integer
                      free:
                        type: integer
                      percent:
                        type: number
                      total:
                        type: integer
                      used:
                        type: integer
                    required:
                    - total
                    - available
                    - percent
                    - used
                    - free
                    type: object
                  server:
                    properties:
                      memory:
                        type: integer
                    required:
                    - memory
                    type: object
                required:
                - memory
                - cpu
                type: object
          description: Get the current memory and CPU usage of the application
  /api/version:
    get:
      responses:
        200:
          content:
            text/plain:
              schema:
                type: string
          description: Get the version of the application
  /auth/login:
    post:
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                password:
                  description: Access token or password
                  type: string
              type: object
      responses:
        200:
          content:
            text/html:
              schema:
                type: string
          description: Login page
        302:
          description: Redirect to the next URL
          headers:
            Location:
              schema:
                type: string
      summary: Submit login form
      tags:
      - auth

