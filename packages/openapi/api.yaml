components:
  schemas:
    AddPackageRequest:
      description: 'This can be a remove package or a local package.


        Supported formats:


        httpx

        httpx==0.27.0

        httpx>=0.27.0

        git+https://github.com/encode/httpx

        https://files.pythonhosted.org/packages/5c/2d/3da5bdf4408b8b2800061c339f240c1802f2e82d55e50bd39c5a881f47f0/httpx-0.27.0.tar.gz

        /example/foo-0.1.0-py3-none-any.whl'
      properties:
        package:
          type: string
        upgrade:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
      required:
      - package
      title: AddPackageRequest
      type: object
    AiCompletionContext:
      properties:
        plainText:
          default: ''
          type: string
        schema:
          default: []
          items:
            $ref: '#/components/schemas/SchemaTable'
          type: array
        variables:
          default: []
          items:
            anyOf:
            - type: string
            - $ref: '#/components/schemas/VariableContext'
          type: array
      required: []
      title: AiCompletionContext
      type: object
    AiCompletionRequest:
      properties:
        code:
          type: string
        context:
          anyOf:
          - type: 'null'
          - $ref: '#/components/schemas/AiCompletionContext'
          default: null
        includeOtherCode:
          type: string
        language:
          default: python
          enum:
          - markdown
          - python
          - sql
        prompt:
          type: string
        selectedText:
          anyOf:
          - type: string
          - type: 'null'
          default: null
      required:
      - prompt
      - includeOtherCode
      - code
      title: AiCompletionRequest
      type: object
    AiConfig:
      description: "Configuration options for AI.\n\n    **Keys.**\n\n    - `rules`:\
        \ custom rules to include in all AI completion prompts\n    - `max_tokens`:\
        \ the maximum number of tokens to use in AI completions\n    - `mode`: the\
        \ mode to use for AI completions. Can be one of: `\"ask\"` or `\"manual\"\
        `\n    - `models`: the models to use for AI completions\n    - `open_ai`:\
        \ the OpenAI config\n    - `anthropic`: the Anthropic config\n    - `google`:\
        \ the Google AI config\n    - `bedrock`: the Bedrock config\n    - `azure`:\
        \ the Azure config\n    - `ollama`: the Ollama config\n    - `github`: the\
        \ GitHub config\n    - `open_ai_compatible`: the OpenAI-compatible config"
      properties:
        anthropic:
          $ref: '#/components/schemas/AnthropicConfig'
        azure:
          $ref: '#/components/schemas/OpenAiConfig'
        bedrock:
          $ref: '#/components/schemas/BedrockConfig'
        github:
          $ref: '#/components/schemas/GitHubConfig'
        google:
          $ref: '#/components/schemas/GoogleAiConfig'
        max_tokens:
          type: integer
        mode:
          enum:
          - ask
          - manual
        models:
          $ref: '#/components/schemas/AiModelConfig'
        ollama:
          $ref: '#/components/schemas/OpenAiConfig'
        open_ai:
          $ref: '#/components/schemas/OpenAiConfig'
        open_ai_compatible:
          $ref: '#/components/schemas/OpenAiConfig'
        rules:
          type: string
      required: []
      title: AiConfig
      type: object
    AiInlineCompletionRequest:
      properties:
        language:
          default: python
          enum:
          - markdown
          - python
          - sql
        prefix:
          type: string
        suffix:
          type: string
      required:
      - prefix
      - suffix
      title: AiInlineCompletionRequest
      type: object
    AiModelConfig:
      description: "Configuration options for an AI model.\n\n    **Keys.**\n\n  \
        \  - `chat_model`: the model to use for chat completions\n    - `edit_model`:\
        \ the model to use for edit completions\n    - `autocomplete_model`: the model\
        \ to use for code completion/autocomplete\n    - `displayed_models`: a list\
        \ of models to display in the UI\n    - `custom_models`: a list of custom\
        \ models to use that are not from the default list"
      properties:
        autocomplete_model:
          type: string
        chat_model:
          type: string
        custom_models:
          items:
            type: string
          type: array
        displayed_models:
          items:
            type: string
          type: array
        edit_model:
          type: string
      required:
      - custom_models
      - displayed_models
      title: AiModelConfig
      type: object
    Alert:
      properties:
        description:
          type: string
        op:
          enum:
          - alert
        title:
          type: string
        variant:
          anyOf:
          - enum:
            - danger
          - type: 'null'
          default: null
      required:
      - op
      - title
      - description
      title: Alert
      type: object
    AnthropicConfig:
      description: "Configuration options for Anthropic.\n\n    **Keys.**\n\n    -\
        \ `api_key`: the Anthropic API key"
      properties:
        api_key:
          type: string
      required: []
      title: AnthropicConfig
      type: object
    Banner:
      properties:
        action:
          anyOf:
          - enum:
            - restart
          - type: 'null'
          default: null
        description:
          type: string
        op:
          enum:
          - banner
        title:
          type: string
        variant:
          anyOf:
          - enum:
            - danger
          - type: 'null'
          default: null
      required:
      - op
      - title
      - description
      title: Banner
      type: object
    BaseResponse:
      properties:
        success:
          type: boolean
      required:
      - success
      title: BaseResponse
      type: object
    BasedpyrightServerConfig:
      description: 'Configuration options for basedpyright Language Server.


        basedpyright handles completion, hover, go-to-definition, and diagnostics,

        but we only use it for diagnostics.'
      properties:
        enabled:
          type: boolean
      required: []
      title: BasedpyrightServerConfig
      type: object
    BedrockConfig:
      description: "Configuration options for Bedrock.\n\n    **Keys.**\n\n    - `profile_name`:\
        \ the AWS profile to use\n    - `region_name`: the AWS region to use\n   \
        \ - `aws_access_key_id`: the AWS access key ID\n    - `aws_secret_access_key`:\
        \ the AWS secret access key"
      properties:
        aws_access_key_id:
          type: string
        aws_secret_access_key:
          type: string
        profile_name:
          type: string
        region_name:
          type: string
      required: []
      title: BedrockConfig
      type: object
    CellChannel:
      description: The channel of a cell's output.
      enum:
      - marimo-error
      - media
      - output
      - pdb
      - stderr
      - stdin
      - stdout
      title: CellChannel
    CellConfig:
      description: 'Internal representation of a cell''s configuration.

        This is not part of the public API.'
      properties:
        column:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
        disabled:
          default: false
          type: boolean
        hide_code:
          default: false
          type: boolean
      required: []
      title: CellConfig
      type: object
    CellOp:
      description: "Op to transition a cell.\n\n    A CellOp's data has some optional\
        \ fields:\n\n    output        - a CellOutput\n    console       - a CellOutput\
        \ (console msg to append), or a list of\n                    CellOutputs\n\
        \    status        - execution status\n    stale_inputs  - whether the cell\
        \ has stale inputs (variables, modules, ...)\n    run_id        - the run\
        \ associated with this cell.\n    serialization - the serialization status\
        \ of the cell\n\n    Omitting a field means that its value should be unchanged!\n\
        \n    And one required field:\n\n    cell_id - the cell id"
      properties:
        cell_id:
          type: string
        console:
          anyOf:
          - items:
              $ref: '#/components/schemas/CellOutput'
            type: array
          - type: 'null'
          - $ref: '#/components/schemas/CellOutput'
          default: null
        op:
          enum:
          - cell-op
        output:
          anyOf:
          - type: 'null'
          - $ref: '#/components/schemas/CellOutput'
          default: null
        run_id:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        serialization:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        stale_inputs:
          anyOf:
          - type: boolean
          - type: 'null'
          default: null
        status:
          anyOf:
          - enum:
            - disabled-transitively
            - idle
            - queued
            - running
          - type: 'null'
          default: null
        timestamp:
          type: number
      required:
      - op
      - cell_id
      title: CellOp
      type: object
    CellOutput:
      properties:
        channel:
          $ref: '#/components/schemas/CellChannel'
        data:
          anyOf:
          - type: string
          - items:
              anyOf:
              - $ref: '#/components/schemas/SetupRootError'
              - $ref: '#/components/schemas/CycleError'
              - $ref: '#/components/schemas/MultipleDefinitionError'
              - $ref: '#/components/schemas/ImportStarError'
              - $ref: '#/components/schemas/MarimoAncestorStoppedError'
              - $ref: '#/components/schemas/MarimoAncestorPreventedError'
              - $ref: '#/components/schemas/MarimoExceptionRaisedError'
              - $ref: '#/components/schemas/MarimoStrictExecutionError'
              - $ref: '#/components/schemas/MarimoInterruptionError'
              - $ref: '#/components/schemas/MarimoSyntaxError'
              - $ref: '#/components/schemas/MarimoInternalError'
              - $ref: '#/components/schemas/UnknownError'
              discriminator:
                mapping:
                  ancestor-prevented: '#/components/schemas/MarimoAncestorPreventedError'
                  ancestor-stopped: '#/components/schemas/MarimoAncestorStoppedError'
                  cycle: '#/components/schemas/CycleError'
                  exception: '#/components/schemas/MarimoExceptionRaisedError'
                  import-star: '#/components/schemas/ImportStarError'
                  internal: '#/components/schemas/MarimoInternalError'
                  interruption: '#/components/schemas/MarimoInterruptionError'
                  multiple-defs: '#/components/schemas/MultipleDefinitionError'
                  setup-refs: '#/components/schemas/SetupRootError'
                  strict-exception: '#/components/schemas/MarimoStrictExecutionError'
                  syntax: '#/components/schemas/MarimoSyntaxError'
                  unknown: '#/components/schemas/UnknownError'
                propertyName: type
            type: array
          - type: object
        mimetype:
          enum:
          - application/json
          - application/vnd.jupyter.widget-view+json
          - application/vnd.marimo+error
          - application/vnd.marimo+mimebundle
          - application/vnd.marimo+traceback
          - application/vnd.vega.v5+json
          - application/vnd.vegalite.v5+json
          - image/avif
          - image/bmp
          - image/gif
          - image/jpeg
          - image/png
          - image/svg+xml
          - image/tiff
          - text/csv
          - text/html
          - text/latex
          - text/markdown
          - text/plain
          - video/mp4
          - video/mpeg
        timestamp:
          type: number
      required:
      - channel
      - mimetype
      - data
      title: CellOutput
      type: object
    ChatAttachment:
      properties:
        content_type:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        name:
          default: attachment
          type: string
        url:
          type: string
      required:
      - url
      title: ChatAttachment
      type: object
    ChatMessage:
      description: A message in a chat.
      properties:
        attachments:
          anyOf:
          - items:
              $ref: '#/components/schemas/ChatAttachment'
            type: array
          - type: 'null'
          default: null
        content: {}
        parts:
          anyOf:
          - items:
              type: object
            type: array
          - type: 'null'
          default: null
        role:
          enum:
          - assistant
          - system
          - user
      required:
      - role
      - content
      title: ChatMessage
      type: object
    ChatRequest:
      properties:
        context:
          $ref: '#/components/schemas/AiCompletionContext'
        includeOtherCode:
          type: string
        messages:
          items:
            $ref: '#/components/schemas/ChatMessage'
          type: array
        model:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        variables:
          anyOf:
          - items:
              anyOf:
              - type: string
              - $ref: '#/components/schemas/VariableContext'
            type: array
          - type: 'null'
          default: null
      required:
      - context
      - includeOtherCode
      - messages
      title: ChatRequest
      type: object
    CodeCompletionRequest:
      properties:
        cellId:
          type: string
        document:
          type: string
        id:
          type: string
      required:
      - id
      - document
      - cellId
      title: CodeCompletionRequest
      type: object
    ColumnStats:
      description: Represents stats for a column in a data table.
      properties:
        'false':
          anyOf:
          - type: integer
          - type: 'null'
          default: null
        max:
          anyOf:
          - {}
          - type: 'null'
          default: null
        mean:
          anyOf:
          - {}
          - type: 'null'
          default: null
        median:
          anyOf:
          - {}
          - type: 'null'
          default: null
        min:
          anyOf:
          - {}
          - type: 'null'
          default: null
        nulls:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
        p25:
          anyOf:
          - {}
          - type: 'null'
          default: null
        p5:
          anyOf:
          - {}
          - type: 'null'
          default: null
        p75:
          anyOf:
          - {}
          - type: 'null'
          default: null
        p95:
          anyOf:
          - {}
          - type: 'null'
          default: null
        std:
          anyOf:
          - {}
          - type: 'null'
          default: null
        total:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
        'true':
          anyOf:
          - type: integer
          - type: 'null'
          default: null
        unique:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
      required: []
      title: ColumnStats
      type: object
    CompletedRun:
      description: Written on run completion (of submitted cells and their descendants.
      properties:
        op:
          enum:
          - completed-run
      required:
      - op
      title: CompletedRun
      type: object
    CompletionConfig:
      description: "Configuration for code completion.\n\n    A dict with key/value\
        \ pairs configuring code completion in the marimo\n    editor.\n\n    **Keys.**\n\
        \n    - `activate_on_typing`: if `False`, completion won't activate\n    until\
        \ the completion hotkey is entered\n    - `copilot`: one of `\"github\"`,\
        \ `\"codeium\"`, or `\"custom\"`\n    - `codeium_api_key`: the Codeium API\
        \ key"
      properties:
        activate_on_typing:
          type: boolean
        api_key:
          anyOf:
          - type: string
          - type: 'null'
        base_url:
          anyOf:
          - type: string
          - type: 'null'
        codeium_api_key:
          anyOf:
          - type: string
          - type: 'null'
        copilot:
          anyOf:
          - type: boolean
          - enum:
            - codeium
            - custom
            - github
        model:
          anyOf:
          - type: string
          - type: 'null'
      required:
      - activate_on_typing
      - copilot
      title: CompletionConfig
      type: object
    CompletionOption:
      properties:
        completion_info:
          anyOf:
          - type: string
          - type: 'null'
        name:
          type: string
        type:
          type: string
      required:
      - name
      - type
      - completion_info
      title: CompletionOption
      type: object
    CompletionResult:
      description: Code completion result.
      properties:
        completion_id:
          type: string
        op:
          enum:
          - completion-result
        options:
          items:
            $ref: '#/components/schemas/CompletionOption'
          type: array
        prefix_length:
          type: integer
      required:
      - op
      - completion_id
      - prefix_length
      - options
      title: CompletionResult
      type: object
    CopyNotebookRequest:
      properties:
        destination:
          type: string
        source:
          type: string
      required:
      - source
      - destination
      title: CopyNotebookRequest
      type: object
    CreateSecretRequest:
      properties:
        key:
          type: string
        name:
          type: string
        provider:
          enum:
          - dotenv
          - env
        value:
          type: string
      required:
      - key
      - value
      - provider
      - name
      title: CreateSecretRequest
      type: object
    CycleError:
      properties:
        edges_with_vars:
          items:
            items: false
            maxItems: 3
            minItems: 3
            prefixItems:
            - type: string
            - items:
                type: string
              type: array
            - type: string
            type: array
          type: array
        type:
          enum:
          - cycle
      required:
      - type
      - edges_with_vars
      title: CycleError
      type: object
    DataColumnPreview:
      description: Preview of a column in a dataset.
      properties:
        chart_code:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        chart_spec:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        column_name:
          default: ''
          type: string
        error:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        missing_packages:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          default: null
        op:
          enum:
          - data-column-preview
        stats:
          anyOf:
          - type: 'null'
          - $ref: '#/components/schemas/ColumnStats'
          default: null
        table_name:
          default: ''
          type: string
      required:
      - op
      title: DataColumnPreview
      type: object
    DataSourceConnection:
      description: "Represents a data source connection.\n\nAttributes:\n    source\
        \ (str): The source of the data source connection. E.g 'postgres'.\n    dialect\
        \ (str): The dialect of the data source connection. E.g 'postgresql'.\n  \
        \  name (str): The name of the data source connection. E.g 'engine'.\n   \
        \ display_name (str): The display name of the data source connection. E.g\
        \ 'PostgresQL (engine)'.\n    databases (List[Database]): The databases in\
        \ the data source connection.\n    default_database (Optional[str]): The default\
        \ database in the data source connection.\n    default_schema (Optional[str]):\
        \ The default schema in the data source connection."
      properties:
        databases:
          items:
            $ref: '#/components/schemas/Database'
          type: array
        default_database:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        default_schema:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        dialect:
          type: string
        display_name:
          type: string
        name:
          type: string
        source:
          type: string
      required:
      - source
      - dialect
      - name
      - display_name
      - databases
      title: DataSourceConnection
      type: object
    DataSourceConnections:
      properties:
        connections:
          items:
            $ref: '#/components/schemas/DataSourceConnection'
          type: array
        op:
          enum:
          - data-source-connections
      required:
      - op
      - connections
      title: DataSourceConnections
      type: object
    DataTable:
      description: "Represents a data table.\n\nAttributes:\n    source_type (DataTableSource):\
        \ Type of data source ('local', 'duckdb', 'connection').\n    source (str):\
        \ Can be dialect, or source db name.\n    name (str): Name of the data table.\n\
        \    num_rows (Optional[int]): Total number of rows in the table, if known.\n\
        \    num_columns (Optional[int]): Total number of columns in the table, if\
        \ known.\n    variable_name (Optional[VariableName]): Variable name referencing\
        \ this table in code.\n    columns (List[DataTableColumn]): List of column\
        \ definitions and metadata.\n    engine (Optional[VariableName]): Database\
        \ engine or connection handler, if any.\n    type (DataTableType): Table type,\
        \ either 'table' or 'view'. Defaults to 'table'.\n    primary_keys (Optional[List[str]]):\
        \ Column names used as primary keys, if any.\n    indexes (Optional[List[str]]):\
        \ Column names used as indexes, if any."
      properties:
        columns:
          items:
            $ref: '#/components/schemas/DataTableColumn'
          type: array
        engine:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        indexes:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          default: null
        name:
          type: string
        num_columns:
          anyOf:
          - type: integer
          - type: 'null'
        num_rows:
          anyOf:
          - type: integer
          - type: 'null'
        primary_keys:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          default: null
        source:
          type: string
        source_type:
          enum:
          - catalog
          - connection
          - duckdb
          - local
        type:
          default: table
          enum:
          - table
          - view
        variable_name:
          anyOf:
          - type: string
          - type: 'null'
      required:
      - source_type
      - source
      - name
      - num_rows
      - num_columns
      - variable_name
      - columns
      title: DataTable
      type: object
    DataTableColumn:
      description: "Represents a column in a data table.\n\nAttributes:\n    name\
        \ (str): The name of the column.\n    type (DataType): The data type of the\
        \ column.\n    external_type (ExternalDataType): The raw data type of the\
        \ column.\n    sample_values (List[Any]): The sample values of the column."
      properties:
        external_type:
          type: string
        name:
          type: string
        sample_values:
          type: array
        type:
          enum:
          - boolean
          - date
          - datetime
          - integer
          - number
          - string
          - time
          - unknown
      required:
      - name
      - type
      - external_type
      - sample_values
      title: DataTableColumn
      type: object
    Database:
      description: "Represents a collection of schemas.\n\nAttributes:\n    name (str):\
        \ The name of the database\n    dialect (str): The dialect of the database\n\
        \    schemas (List[Schema]): List of schemas in the database\n    engine (Optional[VariableName]):\
        \ Database engine or connection handler, if any."
      properties:
        dialect:
          type: string
        engine:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        name:
          type: string
        schemas:
          items:
            $ref: '#/components/schemas/Schema'
          type: array
      required:
      - name
      - dialect
      - schemas
      title: Database
      type: object
    Datasets:
      description: List of datasets.
      properties:
        clear_channel:
          anyOf:
          - enum:
            - catalog
            - connection
            - duckdb
            - local
          - type: 'null'
          default: null
        op:
          enum:
          - datasets
        tables:
          items:
            $ref: '#/components/schemas/DataTable'
          type: array
      required:
      - op
      - tables
      title: Datasets
      type: object
    DatasourcesConfig:
      description: "Configuration for datasources panel.\n\n    **Keys.**\n\n    -\
        \ `auto_discover_schemas`: if `True`, include schemas in the datasource\n\
        \    - `auto_discover_tables`: if `True`, include tables in the datasource\n\
        \    - `auto_discover_columns`: if `True`, include columns & table metadata\
        \ in the datasource"
      properties:
        auto_discover_columns:
          anyOf:
          - type: boolean
          - enum:
            - auto
        auto_discover_schemas:
          anyOf:
          - type: boolean
          - enum:
            - auto
        auto_discover_tables:
          anyOf:
          - type: boolean
          - enum:
            - auto
      required: []
      title: DatasourcesConfig
      type: object
    DeleteCellRequest:
      properties:
        cellId:
          type: string
      required:
      - cellId
      title: DeleteCellRequest
      type: object
    DeleteSecretRequest:
      properties:
        key:
          type: string
      required:
      - key
      title: DeleteSecretRequest
      type: object
    DependencyTreeNode:
      properties:
        dependencies:
          items:
            $ref: '#/components/schemas/DependencyTreeNode'
          type: array
        name:
          type: string
        tags:
          items:
            additionalProperties:
              type: string
            type: object
          type: array
        version:
          anyOf:
          - type: string
          - type: 'null'
      required:
      - name
      - version
      - tags
      - dependencies
      title: DependencyTreeNode
      type: object
    DependencyTreeResponse:
      properties:
        tree:
          anyOf:
          - type: 'null'
          - $ref: '#/components/schemas/DependencyTreeNode'
      required:
      - tree
      title: DependencyTreeResponse
      type: object
    DiagnosticsConfig:
      description: "Configuration options for diagnostics.\n\n    **Keys.**\n\n  \
        \  - `enabled`: if `True`, diagnostics will be shown in the editor"
      properties:
        enabled:
          type: boolean
      required: []
      title: DiagnosticsConfig
      type: object
    DisplayConfig:
      description: "Configuration for display.\n\n    **Keys.**\n\n    - `theme`:\
        \ `\"light\"`, `\"dark\"`, or `\"system\"`\n    - `code_editor_font_size`:\
        \ font size for the code editor\n    - `cell_output`: `\"above\"` or `\"below\"\
        `\n    - `dataframes`: `\"rich\"` or `\"plain\"`\n    - `custom_css`: list\
        \ of paths to custom CSS files\n    - `default_table_page_size`: default number\
        \ of rows to display in tables\n    - `default_table_max_columns`: default\
        \ maximum number of columns to display in tables\n    - `reference_highlighting`:\
        \ if `True`, highlight reactive variable references"
      properties:
        cell_output:
          enum:
          - above
          - below
        code_editor_font_size:
          type: integer
        custom_css:
          items:
            type: string
          type: array
        dataframes:
          enum:
          - plain
          - rich
        default_table_max_columns:
          type: integer
        default_table_page_size:
          type: integer
        default_width:
          enum:
          - columns
          - compact
          - full
          - medium
          - normal
        reference_highlighting:
          type: boolean
        theme:
          enum:
          - dark
          - light
          - system
      required:
      - cell_output
      - code_editor_font_size
      - dataframes
      - default_table_max_columns
      - default_table_page_size
      - default_width
      - theme
      title: DisplayConfig
      type: object
    ExecuteMultipleRequest:
      properties:
        cellIds:
          items:
            type: string
          type: array
        codes:
          items:
            type: string
          type: array
        request:
          anyOf:
          - $ref: '#/components/schemas/HTTPRequest'
          - type: 'null'
          default: null
        timestamp:
          type: number
      required:
      - cellIds
      - codes
      title: ExecuteMultipleRequest
      type: object
    ExecuteScratchpadRequest:
      properties:
        code:
          type: string
        request:
          anyOf:
          - $ref: '#/components/schemas/HTTPRequest'
          - type: 'null'
          default: null
      required:
      - code
      title: ExecuteScratchpadRequest
      type: object
    ExecuteStaleRequest:
      properties:
        request:
          anyOf:
          - $ref: '#/components/schemas/HTTPRequest'
          - type: 'null'
          default: null
      required: []
      title: ExecuteStaleRequest
      type: object
    ExecutionRequest:
      properties:
        cellId:
          type: string
        code:
          type: string
        request:
          anyOf:
          - $ref: '#/components/schemas/HTTPRequest'
          - type: 'null'
          default: null
        timestamp:
          type: number
      required:
      - cellId
      - code
      title: ExecutionRequest
      type: object
    ExportAsHTMLRequest:
      properties:
        assetUrl:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        download:
          type: boolean
        files:
          items:
            type: string
          type: array
        includeCode:
          type: boolean
      required:
      - download
      - files
      - includeCode
      title: ExportAsHTMLRequest
      type: object
    ExportAsIPYNBRequest:
      properties:
        download:
          type: boolean
      required:
      - download
      title: ExportAsIPYNBRequest
      type: object
    ExportAsMarkdownRequest:
      properties:
        download:
          type: boolean
      required:
      - download
      title: ExportAsMarkdownRequest
      type: object
    ExportAsScriptRequest:
      properties:
        download:
          type: boolean
      required:
      - download
      title: ExportAsScriptRequest
      type: object
    FileCreateRequest:
      properties:
        contents:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        name:
          type: string
        path:
          type: string
        type:
          enum:
          - directory
          - file
      required:
      - path
      - type
      - name
      title: FileCreateRequest
      type: object
    FileCreateResponse:
      properties:
        info:
          anyOf:
          - type: 'null'
          - $ref: '#/components/schemas/FileInfo'
          default: null
        message:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        success:
          type: boolean
      required:
      - success
      title: FileCreateResponse
      type: object
    FileDeleteRequest:
      properties:
        path:
          type: string
      required:
      - path
      title: FileDeleteRequest
      type: object
    FileDeleteResponse:
      properties:
        message:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        success:
          type: boolean
      required:
      - success
      title: FileDeleteResponse
      type: object
    FileDetailsRequest:
      properties:
        path:
          type: string
      required:
      - path
      title: FileDetailsRequest
      type: object
    FileDetailsResponse:
      properties:
        contents:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        file:
          $ref: '#/components/schemas/FileInfo'
        mimeType:
          anyOf:
          - type: string
          - type: 'null'
          default: null
      required:
      - file
      title: FileDetailsResponse
      type: object
    FileInfo:
      properties:
        children:
          default: []
          items:
            $ref: '#/components/schemas/FileInfo'
          type: array
        id:
          type: string
        isDirectory:
          type: boolean
        isMarimoFile:
          type: boolean
        lastModified:
          anyOf:
          - type: number
          - type: 'null'
          default: null
        name:
          type: string
        path:
          type: string
      required:
      - id
      - path
      - name
      - isDirectory
      - isMarimoFile
      title: FileInfo
      type: object
    FileListRequest:
      properties:
        path:
          anyOf:
          - type: string
          - type: 'null'
          default: null
      required: []
      title: FileListRequest
      type: object
    FileListResponse:
      properties:
        files:
          items:
            $ref: '#/components/schemas/FileInfo'
          type: array
        root:
          type: string
      required:
      - files
      - root
      title: FileListResponse
      type: object
    FileMoveRequest:
      properties:
        newPath:
          type: string
        path:
          type: string
      required:
      - path
      - newPath
      title: FileMoveRequest
      type: object
    FileMoveResponse:
      properties:
        info:
          anyOf:
          - type: 'null'
          - $ref: '#/components/schemas/FileInfo'
          default: null
        message:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        success:
          type: boolean
      required:
      - success
      title: FileMoveResponse
      type: object
    FileOpenRequest:
      properties:
        path:
          type: string
      required:
      - path
      title: FileOpenRequest
      type: object
    FileSearchRequest:
      properties:
        depth:
          default: 3
          type: integer
        includeDirectories:
          default: true
          type: boolean
        includeFiles:
          default: true
          type: boolean
        limit:
          default: 100
          type: integer
        path:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        query:
          type: string
      required:
      - query
      title: FileSearchRequest
      type: object
    FileSearchResponse:
      properties:
        files:
          items:
            $ref: '#/components/schemas/FileInfo'
          type: array
        query:
          type: string
        totalFound:
          type: integer
      required:
      - files
      - query
      - totalFound
      title: FileSearchResponse
      type: object
    FileUpdateRequest:
      properties:
        contents:
          type: string
        path:
          type: string
      required:
      - path
      - contents
      title: FileUpdateRequest
      type: object
    FileUpdateResponse:
      properties:
        info:
          anyOf:
          - type: 'null'
          - $ref: '#/components/schemas/FileInfo'
          default: null
        message:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        success:
          type: boolean
      required:
      - success
      title: FileUpdateResponse
      type: object
    FocusCell:
      properties:
        cell_id:
          type: string
        op:
          enum:
          - focus-cell
      required:
      - op
      - cell_id
      title: FocusCell
      type: object
    FormatRequest:
      properties:
        codes:
          additionalProperties:
            type: string
          type: object
        lineLength:
          type: integer
      required:
      - codes
      - lineLength
      title: FormatRequest
      type: object
    FormatResponse:
      properties:
        codes:
          additionalProperties:
            type: string
          type: object
      required:
      - codes
      title: FormatResponse
      type: object
    FormattingConfig:
      description: "Configuration for code formatting.\n\n    **Keys.**\n\n    - `line_length`:\
        \ max line length"
      properties:
        line_length:
          type: integer
      required:
      - line_length
      title: FormattingConfig
      type: object
    FunctionCallRequest:
      properties:
        args:
          type: object
        functionCallId:
          type: string
        functionName:
          type: string
        namespace:
          type: string
      required:
      - functionCallId
      - namespace
      - functionName
      - args
      title: FunctionCallRequest
      type: object
    FunctionCallResult:
      description: Result of calling a function.
      properties:
        function_call_id:
          type: string
        op:
          enum:
          - function-call-result
        return_value: {}
        status:
          $ref: '#/components/schemas/HumanReadableStatus'
      required:
      - op
      - function_call_id
      - return_value
      - status
      title: FunctionCallResult
      type: object
    GitHubConfig:
      description: "Configuration options for GitHub.\n\n    **Keys.**\n\n    - `api_key`:\
        \ the GitHub API token\n    - `base_url`: the base URL for the API"
      properties:
        api_key:
          type: string
        base_url:
          type: string
      required: []
      title: GitHubConfig
      type: object
    GoogleAiConfig:
      description: "Configuration options for Google AI.\n\n    **Keys.**\n\n    -\
        \ `api_key`: the Google AI API key"
      properties:
        api_key:
          type: string
      required: []
      title: GoogleAiConfig
      type: object
    HTTPRequest:
      properties:
        baseUrl:
          additionalProperties: {}
          type: object
        cookies:
          additionalProperties:
            type: string
          type: object
        headers:
          additionalProperties:
            type: string
          type: object
        meta:
          additionalProperties: {}
          type: object
        pathParams:
          additionalProperties: {}
          type: object
        queryParams:
          additionalProperties:
            items:
              type: string
            type: array
          type: object
        url:
          additionalProperties: {}
          type: object
        user: {}
      required:
      - url
      - baseUrl
      - headers
      - queryParams
      - pathParams
      - cookies
      - meta
      - user
      type: object
    HumanReadableStatus:
      description: Human-readable status.
      properties:
        code:
          enum:
          - error
          - ok
        message:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        title:
          anyOf:
          - type: string
          - type: 'null'
          default: null
      required:
      - code
      title: HumanReadableStatus
      type: object
    ImportStarError:
      properties:
        msg:
          type: string
        type:
          enum:
          - import-star
      required:
      - type
      - msg
      title: ImportStarError
      type: object
    InstallMissingPackagesRequest:
      properties:
        manager:
          type: string
        versions:
          additionalProperties:
            type: string
          type: object
      required:
      - manager
      - versions
      title: InstallMissingPackagesRequest
      type: object
    InstallingPackageAlert:
      properties:
        log_status:
          anyOf:
          - enum:
            - append
            - done
            - start
          - type: 'null'
          default: null
        logs:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - type: 'null'
          default: null
        op:
          enum:
          - installing-package-alert
        packages:
          additionalProperties:
            enum:
            - failed
            - installed
            - installing
            - queued
          type: object
      required:
      - op
      - packages
      title: InstallingPackageAlert
      type: object
    InstantiateRequest:
      properties:
        autoRun:
          default: true
          type: boolean
        objectIds:
          items:
            type: string
          type: array
        values:
          type: array
      required:
      - objectIds
      - values
      title: InstantiateRequest
      type: object
    Interrupted:
      description: Written when the kernel is interrupted by the user.
      properties:
        op:
          enum:
          - interrupted
      required:
      - op
      title: Interrupted
      type: object
    InvokeAiToolRequest:
      properties:
        arguments:
          type: object
        toolName:
          type: string
      required:
      - toolName
      - arguments
      title: InvokeAiToolRequest
      type: object
    InvokeAiToolResponse:
      properties:
        error:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        result: {}
        success:
          type: boolean
        toolName:
          type: string
      required:
      - success
      - toolName
      - result
      title: InvokeAiToolResponse
      type: object
    KernelCapabilities:
      properties:
        basedpyright:
          default: false
          type: boolean
        pylsp:
          default: false
          type: boolean
        terminal:
          default: false
          type: boolean
        ty:
          default: false
          type: boolean
      required: []
      title: KernelCapabilities
      type: object
    KernelReady:
      description: Kernel is ready for execution.
      properties:
        app_config:
          $ref: '#/components/schemas/_AppConfig'
        capabilities:
          $ref: '#/components/schemas/KernelCapabilities'
        cell_ids:
          items:
            type: string
          type: array
        codes:
          items:
            type: string
          type: array
        configs:
          items:
            $ref: '#/components/schemas/CellConfig'
          type: array
        kiosk:
          type: boolean
        last_executed_code:
          anyOf:
          - additionalProperties:
              type: string
            type: object
          - type: 'null'
        last_execution_time:
          anyOf:
          - additionalProperties:
              type: number
            type: object
          - type: 'null'
        layout:
          anyOf:
          - $ref: '#/components/schemas/LayoutConfig'
          - type: 'null'
        names:
          items:
            type: string
          type: array
        op:
          enum:
          - kernel-ready
        resumed:
          type: boolean
        ui_values:
          anyOf:
          - type: object
          - type: 'null'
      required:
      - op
      - cell_ids
      - codes
      - names
      - layout
      - configs
      - resumed
      - ui_values
      - last_executed_code
      - last_execution_time
      - app_config
      - kiosk
      - capabilities
      title: KernelReady
      type: object
    KeymapConfig:
      description: "Configuration for keymaps.\n\n    **Keys.**\n\n    - `preset`:\
        \ one of `\"default\"` or `\"vim\"`\n    - `overrides`: a dict of keymap actions\
        \ to their keymap override\n    - `vimrc`: path to a vimrc file to load keymaps\
        \ from\n    - `destructive_delete`: if `True`, allows deleting cells with\
        \ content."
      properties:
        destructive_delete:
          type: boolean
        overrides:
          additionalProperties:
            type: string
          type: object
        preset:
          enum:
          - default
          - vim
        vimrc:
          anyOf:
          - type: string
          - type: 'null'
      required:
      - preset
      title: KeymapConfig
      type: object
    KnownUnions:
      properties:
        data_type:
          enum:
          - boolean
          - date
          - datetime
          - integer
          - number
          - string
          - time
          - unknown
        error:
          anyOf:
          - $ref: '#/components/schemas/SetupRootError'
          - $ref: '#/components/schemas/CycleError'
          - $ref: '#/components/schemas/MultipleDefinitionError'
          - $ref: '#/components/schemas/ImportStarError'
          - $ref: '#/components/schemas/MarimoAncestorStoppedError'
          - $ref: '#/components/schemas/MarimoAncestorPreventedError'
          - $ref: '#/components/schemas/MarimoExceptionRaisedError'
          - $ref: '#/components/schemas/MarimoStrictExecutionError'
          - $ref: '#/components/schemas/MarimoInterruptionError'
          - $ref: '#/components/schemas/MarimoSyntaxError'
          - $ref: '#/components/schemas/MarimoInternalError'
          - $ref: '#/components/schemas/UnknownError'
          discriminator:
            mapping:
              ancestor-prevented: '#/components/schemas/MarimoAncestorPreventedError'
              ancestor-stopped: '#/components/schemas/MarimoAncestorStoppedError'
              cycle: '#/components/schemas/CycleError'
              exception: '#/components/schemas/MarimoExceptionRaisedError'
              import-star: '#/components/schemas/ImportStarError'
              internal: '#/components/schemas/MarimoInternalError'
              interruption: '#/components/schemas/MarimoInterruptionError'
              multiple-defs: '#/components/schemas/MultipleDefinitionError'
              setup-refs: '#/components/schemas/SetupRootError'
              strict-exception: '#/components/schemas/MarimoStrictExecutionError'
              syntax: '#/components/schemas/MarimoSyntaxError'
              unknown: '#/components/schemas/UnknownError'
            propertyName: type
        operation:
          anyOf:
          - $ref: '#/components/schemas/CellOp'
          - $ref: '#/components/schemas/FunctionCallResult'
          - $ref: '#/components/schemas/SendUIElementMessage'
          - $ref: '#/components/schemas/RemoveUIElements'
          - $ref: '#/components/schemas/Reload'
          - $ref: '#/components/schemas/Reconnected'
          - $ref: '#/components/schemas/Interrupted'
          - $ref: '#/components/schemas/CompletedRun'
          - $ref: '#/components/schemas/KernelReady'
          - $ref: '#/components/schemas/CompletionResult'
          - $ref: '#/components/schemas/Alert'
          - $ref: '#/components/schemas/Banner'
          - $ref: '#/components/schemas/MissingPackageAlert'
          - $ref: '#/components/schemas/InstallingPackageAlert'
          - $ref: '#/components/schemas/StartupLogs'
          - $ref: '#/components/schemas/Variables'
          - $ref: '#/components/schemas/VariableValues'
          - $ref: '#/components/schemas/QueryParamsSet'
          - $ref: '#/components/schemas/QueryParamsAppend'
          - $ref: '#/components/schemas/QueryParamsDelete'
          - $ref: '#/components/schemas/QueryParamsClear'
          - $ref: '#/components/schemas/Datasets'
          - $ref: '#/components/schemas/DataColumnPreview'
          - $ref: '#/components/schemas/SQLTablePreview'
          - $ref: '#/components/schemas/SQLTableListPreview'
          - $ref: '#/components/schemas/DataSourceConnections'
          - $ref: '#/components/schemas/SecretKeysResult'
          - $ref: '#/components/schemas/FocusCell'
          - $ref: '#/components/schemas/UpdateCellCodes'
          - $ref: '#/components/schemas/UpdateCellIdsRequest'
          discriminator:
            mapping:
              alert: '#/components/schemas/Alert'
              banner: '#/components/schemas/Banner'
              cell-op: '#/components/schemas/CellOp'
              completed-run: '#/components/schemas/CompletedRun'
              completion-result: '#/components/schemas/CompletionResult'
              data-column-preview: '#/components/schemas/DataColumnPreview'
              data-source-connections: '#/components/schemas/DataSourceConnections'
              datasets: '#/components/schemas/Datasets'
              focus-cell: '#/components/schemas/FocusCell'
              function-call-result: '#/components/schemas/FunctionCallResult'
              installing-package-alert: '#/components/schemas/InstallingPackageAlert'
              interrupted: '#/components/schemas/Interrupted'
              kernel-ready: '#/components/schemas/KernelReady'
              missing-package-alert: '#/components/schemas/MissingPackageAlert'
              query-params-append: '#/components/schemas/QueryParamsAppend'
              query-params-clear: '#/components/schemas/QueryParamsClear'
              query-params-delete: '#/components/schemas/QueryParamsDelete'
              query-params-set: '#/components/schemas/QueryParamsSet'
              reconnected: '#/components/schemas/Reconnected'
              reload: '#/components/schemas/Reload'
              remove-ui-elements: '#/components/schemas/RemoveUIElements'
              secret-keys-result: '#/components/schemas/SecretKeysResult'
              send-ui-element-message: '#/components/schemas/SendUIElementMessage'
              sql-table-list-preview: '#/components/schemas/SQLTableListPreview'
              sql-table-preview: '#/components/schemas/SQLTablePreview'
              startup-logs: '#/components/schemas/StartupLogs'
              update-cell-codes: '#/components/schemas/UpdateCellCodes'
              update-cell-ids: '#/components/schemas/UpdateCellIdsRequest'
              variable-values: '#/components/schemas/VariableValues'
              variables: '#/components/schemas/Variables'
            propertyName: op
      required:
      - operation
      - error
      - data_type
      title: KnownUnions
      type: object
    LanguageServersConfig:
      description: "Configuration options for language servers.\n\n    **Keys.**\n\
        \n    - `pylsp`: the pylsp config"
      properties:
        basedpyright:
          $ref: '#/components/schemas/BasedpyrightServerConfig'
        pylsp:
          $ref: '#/components/schemas/PythonLanguageServerConfig'
        ty:
          $ref: '#/components/schemas/TyLanguageServerConfig'
      required: []
      title: LanguageServersConfig
      type: object
    LayoutConfig:
      properties:
        data:
          type: object
        type:
          type: string
      required:
      - type
      - data
      title: LayoutConfig
      type: object
    ListPackagesResponse:
      properties:
        packages:
          items:
            $ref: '#/components/schemas/PackageDescription'
          type: array
      required:
      - packages
      title: ListPackagesResponse
      type: object
    ListSecretKeysRequest:
      properties:
        requestId:
          type: string
      required:
      - requestId
      title: ListSecretKeysRequest
      type: object
    ListSecretKeysResponse:
      properties:
        keys:
          items:
            $ref: '#/components/schemas/SecretKeysWithProvider'
          type: array
      required:
      - keys
      title: ListSecretKeysResponse
      type: object
    MIME:
      description: "Protocol for instantiating objects using marimo's media viewer.\n\
        \n    To implement this protocol, a class needs to define\n    just one method,\
        \ _mime_."
      properties: {}
      required: []
      title: MIME
      type: object
    MarimoAncestorPreventedError:
      properties:
        blamed_cell:
          anyOf:
          - type: string
          - type: 'null'
        msg:
          type: string
        raising_cell:
          type: string
        type:
          enum:
          - ancestor-prevented
      required:
      - type
      - msg
      - raising_cell
      - blamed_cell
      title: MarimoAncestorPreventedError
      type: object
    MarimoAncestorStoppedError:
      properties:
        msg:
          type: string
        raising_cell:
          type: string
        type:
          enum:
          - ancestor-stopped
      required:
      - type
      - msg
      - raising_cell
      title: MarimoAncestorStoppedError
      type: object
    MarimoConfig:
      description: Configuration for the marimo editor
      properties:
        ai:
          $ref: '#/components/schemas/AiConfig'
        completion:
          $ref: '#/components/schemas/CompletionConfig'
        datasources:
          $ref: '#/components/schemas/DatasourcesConfig'
        diagnostics:
          $ref: '#/components/schemas/DiagnosticsConfig'
        display:
          $ref: '#/components/schemas/DisplayConfig'
        experimental:
          type: object
        formatting:
          $ref: '#/components/schemas/FormattingConfig'
        keymap:
          $ref: '#/components/schemas/KeymapConfig'
        language_servers:
          $ref: '#/components/schemas/LanguageServersConfig'
        package_management:
          $ref: '#/components/schemas/PackageManagementConfig'
        runtime:
          $ref: '#/components/schemas/RuntimeConfig'
        save:
          $ref: '#/components/schemas/SaveConfig'
        server:
          $ref: '#/components/schemas/ServerConfig'
        sharing:
          $ref: '#/components/schemas/SharingConfig'
        snippets:
          $ref: '#/components/schemas/SnippetsConfig'
      required:
      - completion
      - display
      - formatting
      - keymap
      - package_management
      - runtime
      - save
      - server
      title: MarimoConfig
      type: object
    MarimoExceptionRaisedError:
      properties:
        exception_type:
          type: string
        msg:
          type: string
        raising_cell:
          anyOf:
          - type: string
          - type: 'null'
        type:
          enum:
          - exception
      required:
      - type
      - msg
      - exception_type
      - raising_cell
      title: MarimoExceptionRaisedError
      type: object
    MarimoFile:
      properties:
        initializationId:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        lastModified:
          anyOf:
          - type: number
          - type: 'null'
          default: null
        name:
          type: string
        path:
          type: string
        sessionId:
          anyOf:
          - type: string
          - type: 'null'
          default: null
      required:
      - name
      - path
      title: MarimoFile
      type: object
    MarimoInternalError:
      description: 'An internal error that should be hidden from the user.

        The error is logged to the console and then a new error is broadcasted

        such that the data is hidden.


        They can be linked back to the original error by the error_id.'
      properties:
        error_id:
          type: string
        msg:
          default: ''
          type: string
        type:
          enum:
          - internal
      required:
      - type
      - error_id
      title: MarimoInternalError
      type: object
    MarimoInterruptionError:
      properties:
        type:
          enum:
          - interruption
      required:
      - type
      title: MarimoInterruptionError
      type: object
    MarimoStrictExecutionError:
      properties:
        blamed_cell:
          anyOf:
          - type: string
          - type: 'null'
        msg:
          type: string
        ref:
          type: string
        type:
          enum:
          - strict-exception
      required:
      - type
      - msg
      - ref
      - blamed_cell
      title: MarimoStrictExecutionError
      type: object
    MarimoSyntaxError:
      properties:
        msg:
          type: string
        type:
          enum:
          - syntax
      required:
      - type
      - msg
      title: MarimoSyntaxError
      type: object
    MissingPackageAlert:
      properties:
        isolated:
          type: boolean
        op:
          enum:
          - missing-package-alert
        packages:
          items:
            type: string
          type: array
      required:
      - op
      - packages
      - isolated
      title: MissingPackageAlert
      type: object
    ModelMessage:
      properties:
        bufferPaths:
          items:
            items:
              anyOf:
              - type: string
              - type: integer
            type: array
          type: array
        state:
          type: object
      required:
      - state
      - bufferPaths
      title: ModelMessage
      type: object
    MultipleDefinitionError:
      properties:
        cells:
          items:
            type: string
          type: array
        name:
          type: string
        type:
          enum:
          - multiple-defs
      required:
      - type
      - name
      - cells
      title: MultipleDefinitionError
      type: object
    OpenAiConfig:
      description: "Configuration options for OpenAI or OpenAI-compatible services.\n\
        \n    **Keys.**\n\n    - `api_key`: the OpenAI API key\n    - `base_url`:\
        \ the base URL for the API\n    - `ssl_verify` : Boolean argument for httpx\
        \ passed to open ai client. httpx defaults to true, but some use cases to\
        \ let users override to False in some testing scenarios\n    - `ca_bundle_path`:\
        \ custom ca bundle to be used for verifying SSL certificates. Used to create\
        \ custom SSL context for httpx client\n    - `client_pem` : custom path of\
        \ a client .pem cert used for verifying identity of client server\n    - `extra_headers`:\
        \ extra headers to be passed to the OpenAI client"
      properties:
        api_key:
          type: string
        base_url:
          type: string
        ca_bundle_path:
          type: string
        client_pem:
          type: string
        extra_headers:
          additionalProperties:
            type: string
          type: object
        model:
          type: string
        ssl_verify:
          type: boolean
      required: []
      title: OpenAiConfig
      type: object
    OpenTutorialRequest:
      properties:
        tutorialId:
          anyOf:
          - enum:
            - dataflow
            - fileformat
            - for-jupyter-users
            - intro
            - layout
            - markdown
            - plots
            - sql
            - ui
          - enum:
            - markdown-format
      required:
      - tutorialId
      title: OpenTutorialRequest
      type: object
    PackageDescription:
      properties:
        name:
          type: string
        version:
          type: string
      required:
      - name
      - version
      title: PackageDescription
      type: object
    PackageManagementConfig:
      description: "Configuration options for package management.\n\n    **Keys.**\n\
        \n    - `manager`: the package manager to use"
      properties:
        manager:
          enum:
          - pip
          - pixi
          - poetry
          - rye
          - uv
      required:
      - manager
      title: PackageManagementConfig
      type: object
    PackageOperationResponse:
      properties:
        error:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        success:
          type: boolean
      required:
      - success
      title: PackageOperationResponse
      type: object
    PdbRequest:
      properties:
        cellId:
          type: string
        request:
          anyOf:
          - $ref: '#/components/schemas/HTTPRequest'
          - type: 'null'
          default: null
      required:
      - cellId
      title: PdbRequest
      type: object
    PreviewDataSourceConnectionRequest:
      description: Fetch a datasource connection
      properties:
        engine:
          type: string
      required:
      - engine
      title: PreviewDataSourceConnectionRequest
      type: object
    PreviewDatasetColumnRequest:
      properties:
        columnName:
          type: string
        fullyQualifiedTableName:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        source:
          type: string
        sourceType:
          enum:
          - catalog
          - connection
          - duckdb
          - local
        tableName:
          type: string
      required:
      - sourceType
      - source
      - tableName
      - columnName
      title: PreviewDatasetColumnRequest
      type: object
    PreviewSQLTableListRequest:
      description: Preview list of tables in an SQL schema
      properties:
        database:
          type: string
        engine:
          type: string
        requestId:
          type: string
        schema:
          type: string
      required:
      - requestId
      - engine
      - database
      - schema
      title: PreviewSQLTableListRequest
      type: object
    PreviewSQLTableRequest:
      description: Preview table details in an SQL database
      properties:
        database:
          type: string
        engine:
          type: string
        requestId:
          type: string
        schema:
          type: string
        tableName:
          type: string
      required:
      - requestId
      - engine
      - database
      - schema
      - tableName
      title: PreviewSQLTableRequest
      type: object
    PythonLanguageServerConfig:
      description: 'Configuration options for Python Language Server.


        pylsp handles completion, hover, go-to-definition, and diagnostics.'
      properties:
        enable_flake8:
          type: boolean
        enable_mypy:
          type: boolean
        enable_pydocstyle:
          type: boolean
        enable_pyflakes:
          type: boolean
        enable_pylint:
          type: boolean
        enable_ruff:
          type: boolean
        enabled:
          type: boolean
      required: []
      title: PythonLanguageServerConfig
      type: object
    QueryParamsAppend:
      properties:
        key:
          type: string
        op:
          enum:
          - query-params-append
        value:
          type: string
      required:
      - op
      - key
      - value
      title: QueryParamsAppend
      type: object
    QueryParamsClear:
      properties:
        op:
          enum:
          - query-params-clear
      required:
      - op
      title: QueryParamsClear
      type: object
    QueryParamsDelete:
      properties:
        key:
          type: string
        op:
          enum:
          - query-params-delete
        value:
          anyOf:
          - type: string
          - type: 'null'
      required:
      - op
      - key
      - value
      title: QueryParamsDelete
      type: object
    QueryParamsSet:
      description: Set query parameters.
      properties:
        key:
          type: string
        op:
          enum:
          - query-params-set
        value:
          anyOf:
          - type: string
          - items:
              type: string
            type: array
      required:
      - op
      - key
      - value
      title: QueryParamsSet
      type: object
    ReadCodeResponse:
      properties:
        contents:
          type: string
      required:
      - contents
      title: ReadCodeResponse
      type: object
    RecentFilesResponse:
      properties:
        files:
          items:
            $ref: '#/components/schemas/MarimoFile'
          type: array
      required:
      - files
      title: RecentFilesResponse
      type: object
    Reconnected:
      properties:
        op:
          enum:
          - reconnected
      required:
      - op
      title: Reconnected
      type: object
    Reload:
      properties:
        op:
          enum:
          - reload
      required:
      - op
      title: Reload
      type: object
    RemovePackageRequest:
      properties:
        package:
          type: string
      required:
      - package
      title: RemovePackageRequest
      type: object
    RemoveUIElements:
      description: Invalidate UI elements for a given cell.
      properties:
        cell_id:
          type: string
        op:
          enum:
          - remove-ui-elements
      required:
      - op
      - cell_id
      title: RemoveUIElements
      type: object
    RenameFileRequest:
      properties:
        filename:
          type: string
      required:
      - filename
      title: RenameFileRequest
      type: object
    RenameRequest:
      properties:
        filename:
          type: string
      required:
      - filename
      title: RenameRequest
      type: object
    RunRequest:
      properties:
        cellIds:
          items:
            type: string
          type: array
        codes:
          items:
            type: string
          type: array
        request:
          anyOf:
          - $ref: '#/components/schemas/HTTPRequest'
          - type: 'null'
          default: null
      required:
      - cellIds
      - codes
      title: RunRequest
      type: object
    RunningNotebooksResponse:
      properties:
        files:
          items:
            $ref: '#/components/schemas/MarimoFile'
          type: array
      required:
      - files
      title: RunningNotebooksResponse
      type: object
    RuntimeConfig:
      description: "Configuration for runtime.\n\n    **Keys.**\n\n    - `auto_instantiate`:\
        \ if `False`, cells won't automatically\n        run on startup. This only\
        \ applies when editing a notebook,\n        and not when running as an application.\n\
        \        The default is `True`.\n    - `auto_reload`: if `lazy`, cells importing\
        \ modified modules will marked\n      as stale; if `autorun`, affected cells\
        \ will be automatically run. similar\n      to IPython's %autoreload extension\
        \ but with more code intelligence.\n    - `reactive_tests`: if `True`, marimo\
        \ will automatically run pytest on cells containing only test functions and\
        \ test classes.\n      execution.\n    - `on_cell_change`: if `lazy`, cells\
        \ will be marked stale when their\n      ancestors run but won't autorun;\
        \ if `autorun`, cells will automatically\n      run when their ancestors run.\n\
        \    - `execution_type`: if `relaxed`, marimo will not clone cell declarations;\n\
        \      if `strict` marimo will clone cell declarations by default, avoiding\n\
        \      hidden potential state build up.\n    - `watcher_on_save`: how to handle\
        \ file changes when saving. `\"lazy\"` marks\n        affected cells as stale,\
        \ `\"autorun\"` automatically runs affected cells.\n    - `output_max_bytes`:\
        \ the maximum size in bytes of cell outputs; larger\n        values may affect\
        \ frontend performance\n    - `std_stream_max_bytes`: the maximum size in\
        \ bytes of console outputs;\n      larger values may affect frontend performance\n\
        \    - `pythonpath`: a list of directories to add to the Python search path.\n\
        \        Directories will be added to the head of sys.path. Similar to the\n\
        \        `PYTHONPATH` environment variable, the directories will be included\
        \ in\n        where Python will look for imported modules.\n    - `dotenv`:\
        \ a list of paths to `.env` files to load.\n        If the file does not exist,\
        \ it will be silently ignored.\n        The default is `[\".env\"]` if a pyproject.toml\
        \ is found, otherwise `[]`.\n    - `default_sql_output`: the default output\
        \ format for SQL queries. Can be one of:\n        `\"auto\"`, `\"native\"\
        `, `\"polars\"`, `\"lazy-polars\"`, or `\"pandas\"`.\n        The default\
        \ is `\"auto\"`.\n    - `default_auto_download`: an Optional list of export\
        \ types to automatically snapshot your notebook as:\n       `html`, `markdown`,\
        \ `ipynb`.\n       The default is None."
      properties:
        auto_instantiate:
          type: boolean
        auto_reload:
          enum:
          - autorun
          - lazy
          - 'off'
        default_auto_download:
          items:
            enum:
            - html
            - ipynb
            - markdown
          type: array
        default_sql_output:
          enum:
          - auto
          - lazy-polars
          - native
          - pandas
          - polars
        dotenv:
          items:
            type: string
          type: array
        on_cell_change:
          enum:
          - autorun
          - lazy
        output_max_bytes:
          type: integer
        pythonpath:
          items:
            type: string
          type: array
        reactive_tests:
          type: boolean
        std_stream_max_bytes:
          type: integer
        watcher_on_save:
          enum:
          - autorun
          - lazy
      required:
      - auto_instantiate
      - auto_reload
      - default_sql_output
      - on_cell_change
      - output_max_bytes
      - reactive_tests
      - std_stream_max_bytes
      - watcher_on_save
      title: RuntimeConfig
      type: object
    SQLTableListPreview:
      description: Preview of a list of tables in a schema.
      properties:
        error:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        op:
          enum:
          - sql-table-list-preview
        request_id:
          type: string
        tables:
          default: []
          items:
            $ref: '#/components/schemas/DataTable'
          type: array
      required:
      - op
      - request_id
      title: SQLTableListPreview
      type: object
    SQLTablePreview:
      description: Preview of a table in a SQL database.
      properties:
        error:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        op:
          enum:
          - sql-table-preview
        request_id:
          type: string
        table:
          anyOf:
          - type: 'null'
          - $ref: '#/components/schemas/DataTable'
      required:
      - op
      - request_id
      - table
      title: SQLTablePreview
      type: object
    SaveAppConfigurationRequest:
      properties:
        config:
          type: object
      required:
      - config
      title: SaveAppConfigurationRequest
      type: object
    SaveConfig:
      description: "Configuration for saving.\n\n    **Keys.**\n\n    - `autosave`:\
        \ one of `\"off\"` or `\"after_delay\"`\n    - `delay`: number of milliseconds\
        \ to wait before autosaving\n    - `format_on_save`: if `True`, format the\
        \ code on save"
      properties:
        autosave:
          enum:
          - after_delay
          - 'off'
        autosave_delay:
          type: integer
        format_on_save:
          type: boolean
      required:
      - autosave
      - autosave_delay
      - format_on_save
      title: SaveConfig
      type: object
    SaveNotebookRequest:
      properties:
        cellIds:
          items:
            type: string
          type: array
        codes:
          items:
            type: string
          type: array
        configs:
          items:
            $ref: '#/components/schemas/CellConfig'
          type: array
        filename:
          type: string
        layout:
          anyOf:
          - type: object
          - type: 'null'
          default: null
        names:
          items:
            type: string
          type: array
        persist:
          default: true
          type: boolean
      required:
      - cellIds
      - codes
      - names
      - configs
      - filename
      title: SaveNotebookRequest
      type: object
    SaveUserConfigurationRequest:
      properties:
        config:
          type: object
      required:
      - config
      title: SaveUserConfigurationRequest
      type: object
    Schema:
      properties:
        name:
          type: string
        tables:
          items:
            $ref: '#/components/schemas/DataTable'
          type: array
      required:
      - name
      - tables
      title: Schema
      type: object
    SchemaColumn:
      properties:
        name:
          type: string
        sampleValues:
          type: array
        type:
          type: string
      required:
      - name
      - type
      - sampleValues
      title: SchemaColumn
      type: object
    SchemaTable:
      properties:
        columns:
          items:
            $ref: '#/components/schemas/SchemaColumn'
          type: array
        name:
          type: string
      required:
      - name
      - columns
      title: SchemaTable
      type: object
    SecretKeysResult:
      description: Result of listing secret keys.
      properties:
        op:
          enum:
          - secret-keys-result
        request_id:
          type: string
        secrets:
          items:
            $ref: '#/components/schemas/SecretKeysWithProvider'
          type: array
      required:
      - op
      - request_id
      - secrets
      title: SecretKeysResult
      type: object
    SecretKeysWithProvider:
      properties:
        keys:
          items:
            type: string
          type: array
        name:
          type: string
        provider:
          enum:
          - dotenv
          - env
      required:
      - provider
      - name
      - keys
      title: SecretKeysWithProvider
      type: object
    SendUIElementMessage:
      description: Send a message to a UI element.
      properties:
        buffers:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          default: null
        message:
          type: object
        model_id:
          anyOf:
          - type: string
          - type: 'null'
        op:
          enum:
          - send-ui-element-message
        ui_element:
          anyOf:
          - type: string
          - type: 'null'
      required:
      - op
      - ui_element
      - model_id
      - message
      title: SendUIElementMessage
      type: object
    ServerConfig:
      description: "Configuration for the server.\n\n    **Keys.**\n\n    - `browser`:\
        \ the web browser to use. `\"default\"` or a browser registered\n        with\
        \ Python's webbrowser module (eg, `\"firefox\"` or `\"chrome\"`)\n    - `follow_symlink`:\
        \ if true, the server will follow symlinks it finds\n        inside its static\
        \ assets directory."
      properties:
        browser:
          anyOf:
          - enum:
            - default
          - type: string
        follow_symlink:
          type: boolean
      required:
      - browser
      - follow_symlink
      title: ServerConfig
      type: object
    SetCellConfigRequest:
      properties:
        configs:
          additionalProperties:
            type: object
          type: object
      required:
      - configs
      title: SetCellConfigRequest
      type: object
    SetModelMessageRequest:
      properties:
        buffers:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          default: null
        message:
          $ref: '#/components/schemas/ModelMessage'
        modelId:
          type: string
      required:
      - modelId
      - message
      title: SetModelMessageRequest
      type: object
    SetUIElementValueRequest:
      properties:
        objectIds:
          items:
            type: string
          type: array
        request:
          anyOf:
          - $ref: '#/components/schemas/HTTPRequest'
          - type: 'null'
          default: null
        token:
          type: string
        values:
          type: array
      required:
      - objectIds
      - values
      title: SetUIElementValueRequest
      type: object
    SetUserConfigRequest:
      properties:
        config:
          $ref: '#/components/schemas/MarimoConfig'
      required:
      - config
      title: SetUserConfigRequest
      type: object
    SetupRootError:
      properties:
        edges_with_vars:
          items:
            items: false
            maxItems: 3
            minItems: 3
            prefixItems:
            - type: string
            - items:
                type: string
              type: array
            - type: string
            type: array
          type: array
        type:
          enum:
          - setup-refs
      required:
      - type
      - edges_with_vars
      title: SetupRootError
      type: object
    SharingConfig:
      description: "Configuration for sharing features.\n\n    **Keys.**\n\n    -\
        \ `html`: if `False`, HTML sharing options will be hidden from the UI\n  \
        \  - `wasm`: if `False`, WebAssembly sharing options will be hidden from the\
        \ UI"
      properties:
        html:
          type: boolean
        wasm:
          type: boolean
      required: []
      title: SharingConfig
      type: object
    ShutdownSessionRequest:
      properties:
        sessionId:
          type: string
      required:
      - sessionId
      title: ShutdownSessionRequest
      type: object
    Snippet:
      properties:
        sections:
          items:
            $ref: '#/components/schemas/SnippetSection'
          type: array
        title:
          type: string
      required:
      - title
      - sections
      title: Snippet
      type: object
    SnippetSection:
      properties:
        code:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        html:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        id:
          type: string
      required:
      - id
      title: SnippetSection
      type: object
    Snippets:
      properties:
        snippets:
          items:
            $ref: '#/components/schemas/Snippet'
          type: array
      required:
      - snippets
      title: Snippets
      type: object
    SnippetsConfig:
      description: "Configuration for snippets.\n\n    **Keys.**\n\n    - `custom_path`:\
        \ the path to the custom snippets directory"
      properties:
        custom_paths:
          items:
            type: string
          type: array
        include_default_snippets:
          type: boolean
      required: []
      title: SnippetsConfig
      type: object
    StartupLogs:
      properties:
        content:
          type: string
        op:
          enum:
          - startup-logs
        status:
          enum:
          - append
          - done
          - start
      required:
      - op
      - content
      - status
      title: StartupLogs
      type: object
    StdinRequest:
      properties:
        text:
          type: string
      required:
      - text
      title: StdinRequest
      type: object
    StopRequest:
      properties: {}
      required: []
      title: StopRequest
      type: object
    StoreConfig:
      description: Configuration for cache stores.
      properties:
        args:
          type: object
        type:
          enum:
          - file
          - redis
          - rest
          - tiered
      required: []
      title: StoreConfig
      type: object
    SuccessResponse:
      properties:
        success:
          default: true
          type: boolean
      required: []
      title: SuccessResponse
      type: object
    TyLanguageServerConfig:
      description: 'Configuration options for Ty Language Server.


        ty handles completion, hover, go-to-definition, and diagnostics,

        but we only use it for diagnostics.'
      properties:
        enabled:
          type: boolean
      required: []
      title: TyLanguageServerConfig
      type: object
    UnknownError:
      properties:
        error_type:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        msg:
          type: string
        type:
          enum:
          - unknown
      required:
      - type
      - msg
      title: UnknownError
      type: object
    UpdateCellCodes:
      properties:
        cell_ids:
          items:
            type: string
          type: array
        code_is_stale:
          type: boolean
        codes:
          items:
            type: string
          type: array
        op:
          enum:
          - update-cell-codes
      required:
      - op
      - cell_ids
      - codes
      - code_is_stale
      title: UpdateCellCodes
      type: object
    UpdateCellIdsRequest:
      description: 'Update the cell ID ordering of the cells in the notebook.


        Right now we send the entire list of cell IDs,

        but in the future we might want to send change-deltas.'
      properties:
        cell_ids:
          items:
            type: string
          type: array
        op:
          enum:
          - update-cell-ids
      required:
      - op
      - cell_ids
      title: UpdateCellIdsRequest
      type: object
    UpdateComponentValuesRequest:
      properties:
        objectIds:
          items:
            type: string
          type: array
        values:
          type: array
      required:
      - objectIds
      - values
      title: UpdateComponentValuesRequest
      type: object
    VariableContext:
      properties:
        name:
          type: string
        previewValue: {}
        valueType:
          type: string
      required:
      - name
      - valueType
      - previewValue
      title: VariableContext
      type: object
    VariableDeclaration:
      properties:
        declared_by:
          items:
            type: string
          type: array
        name:
          type: string
        used_by:
          items:
            type: string
          type: array
      required:
      - name
      - declared_by
      - used_by
      title: VariableDeclaration
      type: object
    VariableValue:
      properties:
        datatype:
          anyOf:
          - type: string
          - type: 'null'
        name:
          type: string
        value:
          anyOf:
          - type: string
          - type: 'null'
      required:
      - name
      - value
      - datatype
      title: VariableValue
      type: object
    VariableValues:
      description: List of variables and their types/values.
      properties:
        op:
          enum:
          - variable-values
        variables:
          items:
            $ref: '#/components/schemas/VariableValue'
          type: array
      required:
      - op
      - variables
      title: VariableValues
      type: object
    Variables:
      description: List of variable declarations.
      properties:
        op:
          enum:
          - variables
        variables:
          items:
            $ref: '#/components/schemas/VariableDeclaration'
          type: array
      required:
      - op
      - variables
      title: Variables
      type: object
    WorkspaceFilesRequest:
      properties:
        includeMarkdown:
          default: false
          type: boolean
      required: []
      title: WorkspaceFilesRequest
      type: object
    WorkspaceFilesResponse:
      properties:
        files:
          items:
            $ref: '#/components/schemas/FileInfo'
          type: array
        root:
          type: string
      required:
      - root
      - files
      title: WorkspaceFilesResponse
      type: object
    _AppConfig:
      description: "Program-specific configuration.\n\n    Configuration for frontends\
        \ or runtimes that is specific to\n    a single marimo program."
      properties:
        app_title:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        auto_download:
          items:
            enum:
            - html
            - ipynb
            - markdown
          type: array
        css_file:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        html_head_file:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        layout_file:
          anyOf:
          - type: string
          - type: 'null'
          default: null
        sql_output:
          default: auto
          enum:
          - auto
          - lazy-polars
          - native
          - pandas
          - polars
        width:
          default: compact
          enum:
          - columns
          - compact
          - full
          - medium
          - normal
      required: []
      title: _AppConfig
      type: object
info:
  title: marimo API
  version: 0.15.2
openapi: 3.1.0
paths:
  /@file/{filename_and_length}:
    get:
      parameters:
      - description: The filename and byte length of the virtual file
        in: path
        name: filename_and_length
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/octet-stream:
              schema:
                type: string
          description: Get a virtual file
        '404':
          description: Invalid byte length in virtual file request
  /api/ai/chat:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChatRequest'
        description: The request body for AI chat
        required: true
  /api/ai/completion:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AiCompletionRequest'
        description: The request body for AI completion
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties: true
                type: object
          description: Get AI completion for a prompt
  /api/ai/inline_completion:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AiInlineCompletionRequest'
        description: The request body for AI inline completion
        required: true
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Get AI inline completion for code
  /api/ai/invoke_tool:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InvokeAiToolRequest'
        description: The request body for tool invocation
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InvokeAiToolResponse'
          description: Tool invocation result
  /api/datasources/preview_column:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreviewDatasetColumnRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Preview a column in a dataset
  /api/datasources/preview_datasource_connection:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreviewDataSourceConnectionRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Broadcasts a datasource connection
  /api/datasources/preview_sql_table:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreviewSQLTableRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Preview a SQL table
  /api/datasources/preview_sql_table_list:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PreviewSQLTableListRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Preview a list of tables in an SQL schema
  /api/documentation/snippets:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Snippets'
          description: Load the snippets for the documentation page
  /api/export/auto_export/html:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportAsHTMLRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Export the notebook as HTML
        '400':
          description: File must be saved before downloading
  /api/export/auto_export/ipynb:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportAsIPYNBRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Export the notebook as IPYNB
        '400':
          description: File must be saved before downloading
  /api/export/auto_export/markdown:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportAsMarkdownRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Export the notebook as a markdown
        '400':
          description: File must be saved before downloading
  /api/export/html:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportAsHTMLRequest'
      responses:
        '200':
          content:
            text/html:
              schema:
                type: string
          description: Export the notebook as HTML
        '400':
          description: File must be saved before downloading
  /api/export/markdown:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportAsMarkdownRequest'
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Export the notebook as a markdown
        '400':
          description: File must be saved before downloading
  /api/export/script:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExportAsScriptRequest'
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Export the notebook as a script
        '400':
          description: File must be saved before downloading
  /api/files/create:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileCreateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileCreateResponse'
          description: Create a new file or directory
  /api/files/delete:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileDeleteRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDeleteResponse'
          description: Delete a file or directory
  /api/files/file_details:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileDetailsRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileDetailsResponse'
          description: Get details of a specific file or directory
  /api/files/list_files:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileListRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileListResponse'
          description: List files and directories in a given path
  /api/files/move:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileMoveRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileMoveResponse'
          description: Move a file or directory
  /api/files/open:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileOpenRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: Open a file in the system editor
  /api/files/search:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileSearchRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileSearchResponse'
          description: Search for files and directories matching a query
  /api/files/update:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileUpdateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUpdateResponse'
          description: Update a file or directory
  /api/home/recent_files:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecentFilesResponse'
          description: Get the recent files
  /api/home/running_notebooks:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunningNotebooksResponse'
          description: Get the running files
  /api/home/shutdown_session:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ShutdownSessionRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RunningNotebooksResponse'
          description: Shutdown the current session
  /api/home/tutorial/open:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OpenTutorialRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MarimoFile'
          description: Open a new tutorial
  /api/home/workspace_files:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WorkspaceFilesRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WorkspaceFilesResponse'
          description: Get the files in the workspace
  /api/kernel/code_autocomplete:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeCompletionRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Complete a code fragment
  /api/kernel/copy:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CopyNotebookRequest'
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Copy notebook
  /api/kernel/delete:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeleteCellRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Delete a cell
  /api/kernel/format:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FormatRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FormatResponse'
          description: Format code
  /api/kernel/function_call:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FunctionCallRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Invoke an RPC
  /api/kernel/install_missing_packages:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstallMissingPackagesRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Install missing packages
  /api/kernel/instantiate:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstantiateRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Instantiate a component
  /api/kernel/interrupt:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Interrupt the kernel's execution
  /api/kernel/pdb/pm:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PdbRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Run a post mortem on the most recent failed cell.
  /api/kernel/read_code:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReadCodeResponse'
          description: Read the code from the server
        '400':
          description: File must be saved before downloading
  /api/kernel/rename:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RenameFileRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Rename the current app
  /api/kernel/restart_session:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Restart the current session without affecting other sessions.
  /api/kernel/run:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RunRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Run a cell. Updates cell code in the kernel if needed; registers
            new cells for unseen cell IDs. Only allowed in edit mode.
  /api/kernel/save:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveNotebookRequest'
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Save the current app
  /api/kernel/save_app_config:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveAppConfigurationRequest'
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Save the app configuration
  /api/kernel/save_user_config:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SaveUserConfigurationRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Update the user config on disk and in the kernel. Only allowed
            in edit mode.
  /api/kernel/scratchpad/run:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteScratchpadRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Run the scratchpad
  /api/kernel/set_cell_config:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetCellConfigRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Set the configuration of a cell
  /api/kernel/set_model_value:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetModelMessageRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Set model value
  /api/kernel/set_ui_element_value:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateComponentValuesRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Set UI element values
  /api/kernel/shutdown:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Shutdown the kernel
  /api/kernel/stdin:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StdinRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Send input to the stdin stream
  /api/kernel/sync/cell_ids:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateCellIdsRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
          description: Sync cell ids
  /api/kernel/takeover:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  status:
                    type: string
                type: object
          description: Successfully closed existing sessions
  /api/packages/add:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddPackageRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageOperationResponse'
          description: Install package
  /api/packages/list:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListPackagesResponse'
          description: List installed packages
  /api/packages/remove:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RemovePackageRequest'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PackageOperationResponse'
          description: Uninstall package
  /api/packages/tree:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DependencyTreeResponse'
          description: List dependency tree
  /api/secrets/create:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSecretRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: Create a secret
  /api/secrets/delete:
    post:
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseResponse'
          description: Delete a secret
  /api/secrets/keys:
    post:
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ListSecretKeysRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ListSecretKeysResponse'
          description: List all secret keys
  /api/status:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  filenames:
                    items:
                      type: string
                    type: array
                  lsp_running:
                    type: boolean
                  mode:
                    type: string
                  node_version:
                    type: string
                  requirements:
                    items:
                      type: string
                    type: array
                  sessions:
                    type: integer
                  status:
                    type: string
                  version:
                    type: string
                type: object
          description: Get the status of the application
  /api/status/connections:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  active:
                    type: integer
                type: object
          description: Get the number of active websocket connections
  /api/usage:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                properties:
                  cpu:
                    properties:
                      percent:
                        type: number
                    required:
                    - percent
                    type: object
                  gpu:
                    items:
                      properties:
                        index:
                          type: integer
                        memory:
                          properties:
                            free:
                              type: integer
                            percent:
                              type: number
                            total:
                              type: integer
                            used:
                              type: integer
                          required:
                          - total
                          - used
                          - free
                          - percent
                          type: object
                        name:
                          type: string
                      required:
                      - index
                      - memory
                      - name
                      type: object
                    type: array
                  kernel:
                    properties:
                      memory:
                        type: integer
                    type: object
                  memory:
                    properties:
                      available:
                        type: integer
                      free:
                        type: integer
                      percent:
                        type: number
                      total:
                        type: integer
                      used:
                        type: integer
                    required:
                    - total
                    - available
                    - percent
                    - used
                    - free
                    type: object
                  server:
                    properties:
                      memory:
                        type: integer
                    required:
                    - memory
                    type: object
                required:
                - memory
                - cpu
                type: object
          description: Get the current memory and CPU usage of the application
  /api/version:
    get:
      responses:
        '200':
          content:
            text/plain:
              schema:
                type: string
          description: Get the version of the application
  /auth/login:
    post:
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                password:
                  description: Access token or password
                  type: string
              type: object
      responses:
        '200':
          content:
            text/html:
              schema:
                type: string
          description: Login page
        '302':
          description: Redirect to the next URL
          headers:
            Location:
              schema:
                type: string
      summary: Submit login form
      tags:
      - auth

